{"version":3,"sources":["webpack:///js/15.fdfc3e1.js","webpack:///./docs/components/button/en-US.md","webpack:///./docs/components/button/demo/basic.md?0d8d","webpack:///./docs/components/button/demo/disabled.md?a7de","webpack:///./docs/components/button/demo/size.md?6845"],"names":["webpackJsonp","8cWC","module","exports","__webpack_require__","markdown","demos","basic","disabled","size","mBvl","code","meta","order","title","zh-CN","en-US","subtitle","preview","React","_dashkitUi","createElement","className","Button","type","outline","round","icon","mcqB","xMNe"],"mappings":"AAAAA,cAAc,KAERC,OACA,SAAUC,EAAQC,EAASC,GCHjCF,EAAAC,SACAE,SAAA,i1CACAC,OACAC,MAASH,EAAQ,QACjBI,SAAYJ,EAAQ,QACpBK,KAAQL,EAAQ,WDUVM,KACA,SAAUR,EAAQC,EAASC,GEhBjCF,EAAAC,SAAkBQ,KAAA,mrDAAmvDC,MAAWC,MAAA,EAAAC,OAAmBC,QAAA,KAAAC,QAAA,SAA6BC,UAAaF,QAAA,iHAAAC,QAAA,+HAA+PE,QAAA,WAC5kE,GAAAC,GAAcf,EAAQ,QAItBgB,GAFiBhB,EAAQ,QAENA,EAAQ,QAE3B,OAAAe,GAAAE,cAAA,OACAC,UAAA,kBACGH,EAAAE,cAAA,OACHC,UAAA,eACGH,EAAAE,cAAAD,EAAAG,OAAA,gBAAAJ,EAAAE,cAAAD,EAAAG,QACHC,KAAA,WACG,WAAAL,EAAAE,cAAAD,EAAAG,QACHC,KAAA,WACG,WAAAL,EAAAE,cAAAD,EAAAG,QACHC,KAAA,WACG,WAAAL,EAAAE,cAAAD,EAAAG,QACHC,KAAA,UACG,UAAAL,EAAAE,cAAAD,EAAAG,QACHC,KAAA,QACG,QAAAL,EAAAE,cAAAD,EAAAG,QACHC,KAAA,QACG,SAAAL,EAAAE,cAAA,OACHC,UAAA,eACGH,EAAAE,cAAAD,EAAAG,QACHE,SAAA,GACG,WAAAN,EAAAE,cAAAD,EAAAG,QACHC,KAAA,UACAC,SAAA,GACG,WAAAN,EAAAE,cAAAD,EAAAG,QACHC,KAAA,UACAC,SAAA,GACG,WAAAN,EAAAE,cAAAD,EAAAG,QACHC,KAAA,UACAC,SAAA,GACG,WAAAN,EAAAE,cAAAD,EAAAG,QACHC,KAAA,SACAC,SAAA,GACG,UAAAN,EAAAE,cAAAD,EAAAG,QACHC,KAAA,OACAC,SAAA,GACG,SAAAN,EAAAE,cAAA,OACHC,UAAA,eACGH,EAAAE,cAAAD,EAAAG,QACHG,OAAA,GACG,SAAAP,EAAAE,cAAAD,EAAAG,QACHC,KAAA,UACAE,OAAA,GACG,WAAAP,EAAAE,cAAAD,EAAAG,QACHC,KAAA,UACAE,OAAA,GACG,WAAAP,EAAAE,cAAAD,EAAAG,QACHC,KAAA,UACAE,OAAA,GACG,WAAAP,EAAAE,cAAAD,EAAAG,QACHC,KAAA,SACAE,OAAA,GACG,UAAAP,EAAAE,cAAAD,EAAAG,QACHC,KAAA,OACAE,OAAA,GACG,SAAAP,EAAAE,cAAA,OACHC,UAAA,eACGH,EAAAE,cAAAD,EAAAG,QACHG,OAAA,EACAC,KAAA,WACGR,EAAAE,cAAAD,EAAAG,QACHG,OAAA,EACAF,KAAA,UACAG,KAAA,aACGR,EAAAE,cAAAD,EAAAG,QACHG,OAAA,EACAF,KAAA,UACAG,KAAA,iBACGR,EAAAE,cAAAD,EAAAG,QACHG,OAAA,EACAF,KAAA,UACAG,KAAA,aACGR,EAAAE,cAAAD,EAAAG,QACHG,OAAA,EACAF,KAAA,SACAG,KAAA,iBACGR,EAAAE,cAAAD,EAAAG,QACHG,OAAA,EACAF,KAAA,OACAG,KAAA,cFwBMC,KACA,SAAU1B,EAAQC,EAASC,GG9GjCF,EAAAC,SAAkBQ,KAAA,kxCAA0zCC,MAAWC,MAAA,EAAAC,OAAmBC,QAAA,KAAAC,QAAA,YAAgCC,UAAaF,QAAA,oEAAAC,QAAA,4FAA+KE,QAAA,WACtkD,GAAAC,GAAcf,EAAQ,QAItBgB,GAFiBhB,EAAQ,QAENA,EAAQ,QAE3B,OAAAe,GAAAE,cAAA,OACAC,UAAA,kBACGH,EAAAE,cAAA,OACHC,UAAA,eACGH,EAAAE,cAAAD,EAAAG,OAAA,gBAAAJ,EAAAE,cAAAD,EAAAG,QACHf,UAAA,GACG,qBAAAW,EAAAE,cAAA,OACHC,UAAA,eACGH,EAAAE,cAAAD,EAAAG,QACHC,KAAA,WACG,WAAAL,EAAAE,cAAAD,EAAAG,QACHC,KAAA,UACAhB,UAAA,GACG,qBAAAW,EAAAE,cAAA,OACHC,UAAA,eACGH,EAAAE,cAAAD,EAAAG,QACHC,KAAA,WACG,WAAAL,EAAAE,cAAAD,EAAAG,QACHC,KAAA,UACAhB,UAAA,GACG,qBAAAW,EAAAE,cAAA,OACHC,UAAA,eACGH,EAAAE,cAAAD,EAAAG,QACHC,KAAA,WACG,WAAAL,EAAAE,cAAAD,EAAAG,QACHC,KAAA,UACAhB,UAAA,GACG,qBAAAW,EAAAE,cAAA,OACHC,UAAA,eACGH,EAAAE,cAAAD,EAAAG,QACHC,KAAA,UACG,UAAAL,EAAAE,cAAAD,EAAAG,QACHC,KAAA,SACAhB,UAAA,GACG,oBAAAW,EAAAE,cAAA,OACHC,UAAA,eACGH,EAAAE,cAAAD,EAAAG,QACHC,KAAA,QACG,QAAAL,EAAAE,cAAAD,EAAAG,QACHC,KAAA,OACAhB,UAAA,GACG,kBAAAW,EAAAE,cAAA,OACHC,UAAA,eACGH,EAAAE,cAAAD,EAAAG,QACHC,KAAA,QACG,QAAAL,EAAAE,cAAAD,EAAAG,QACHC,KAAA,OACAhB,UAAA,GACG,sBHqHGqB,KACA,SAAU3B,EAAQC,EAASC,GI7KjCF,EAAAC,SAAkBQ,KAAA,8gBAAwiBC,MAAWC,MAAA,EAAAC,OAAmBC,QAAA,KAAAC,QAAA,SAA6BC,UAAaF,QAAA,iIAAAC,QAAA,mNAAmWE,QAAA,WACr+B,GAAAC,GAAcf,EAAQ,QAItBgB,GAFiBhB,EAAQ,QAENA,EAAQ,QAE3B,OAAAe,GAAAE,cAAA,OACAC,UAAA,eACGH,EAAAE,cAAAD,EAAAG,QACHd,KAAA,SACG,SAAAU,EAAAE,cAAAD,EAAAG,QACHd,KAAA,WACG,WAAAU,EAAAE,cAAAD,EAAAG,QACHd,KAAA,SACG,SAAAU,EAAAE,cAAAD,EAAAG,QACHC,KAAA,UACAf,KAAA,QACAiB,OAAA,EACAC,KAAA,UACG,SAAAR,EAAAE,cAAAD,EAAAG,QACHC,KAAA,UACAf,KAAA,UACAiB,OAAA,EACAC,KAAA,UACG,WAAAR,EAAAE,cAAAD,EAAAG,QACHC,KAAA,UACAf,KAAA,QACAiB,OAAA,EACAC,KAAA,UACG","file":"js/15.fdfc3e1.js","sourcesContent":["webpackJsonp([15],{\n\n/***/ \"8cWC\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n markdown: \"<h1>Button</h1>\\n<p>Buttons for actions in forms, dialogs, and more with support for multiple sizes, states, and more.</p>\\n<div id=\\\"demos\\\"></div>\\n<h2>API</h2>\\n<div class=\\\"api-container\\\">\\n<table>\\n<thead>\\n<tr>\\n<th>Property</th>\\n<th>Description</th>\\n<th>Type</th>\\n<th>Default</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>className</td>\\n<td>className of the component</td>\\n<td>-</td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>size</td>\\n<td>button size, can be set to <code>small</code> <code>large</code> or omitted</td>\\n<td>string</td>\\n<td>default</td>\\n</tr>\\n<tr>\\n<td>type</td>\\n<td>button type, can be set to <code>primary</code> <code>success</code> <code>warning</code> <code>danger</code> <code>info</code> <code>link</code> or ommited</td>\\n<td>string</td>\\n<td>default</td>\\n</tr>\\n<tr>\\n<td>outline</td>\\n<td>determine whether it's a outline button</td>\\n<td>boolean</td>\\n<td>false</td>\\n</tr>\\n<tr>\\n<td>round</td>\\n<td>determine whether it's a round button</td>\\n<td>boolean</td>\\n<td>false</td>\\n</tr>\\n<tr>\\n<td>disabled</td>\\n<td>disable the button</td>\\n<td>boolean</td>\\n<td>false</td>\\n</tr>\\n<tr>\\n<td>loading</td>\\n<td>determine whether it's loading</td>\\n<td>boolean</td>\\n<td>false</td>\\n</tr>\\n<tr>\\n<td>icon</td>\\n<td>button icon, see <code>Icon</code> component</td>\\n<td>string</td>\\n<td>-</td>\\n</tr>\\n</tbody>\\n</table>\\n</div>\\n\",\n demos: {\n'basic': __webpack_require__(\"mBvl\"), \n'disabled': __webpack_require__(\"mcqB\"), \n'size': __webpack_require__(\"xMNe\")\n},};\n\n/***/ }),\n\n/***/ \"mBvl\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {code: \"import { Button } from 'dashkit-ui';\\n\\nReactDOM.render(\\n  <div className=\\\"button-wrapper\\\">\\n    <div className=\\\"button-list\\\">\\n      <Button>Default</Button>\\n      <Button type=\\\"primary\\\">Primary</Button>\\n      <Button type=\\\"success\\\">Success</Button>\\n      <Button type=\\\"warning\\\">Warning</Button>\\n      <Button type=\\\"danger\\\">Danger</Button>\\n      <Button type=\\\"info\\\">Info</Button>\\n      <Button type=\\\"link\\\">Link</Button>\\n    </div>\\n\\n    <div className=\\\"button-list\\\">\\n      <Button outline>Outline</Button>\\n      <Button type=\\\"primary\\\" outline>\\n        Primary\\n      </Button>\\n      <Button type=\\\"success\\\" outline>\\n        Success\\n      </Button>\\n      <Button type=\\\"warning\\\" outline>\\n        Warning\\n      </Button>\\n      <Button type=\\\"danger\\\" outline>\\n        Danger\\n      </Button>\\n      <Button type=\\\"info\\\" outline>\\n        Info\\n      </Button>\\n    </div>\\n\\n    <div className=\\\"button-list\\\">\\n      <Button round>Round</Button>\\n      <Button type=\\\"primary\\\" round>\\n        Primary\\n      </Button>\\n      <Button type=\\\"success\\\" round>\\n        Success\\n      </Button>\\n      <Button type=\\\"warning\\\" round>\\n        Warning\\n      </Button>\\n      <Button type=\\\"danger\\\" round>\\n        Danger\\n      </Button>\\n      <Button type=\\\"info\\\" round>\\n        Info\\n      </Button>\\n    </div>\\n\\n    <div className=\\\"button-list\\\">\\n      <Button round icon=\\\"search\\\" />\\n      <Button round type=\\\"primary\\\" icon=\\\"download\\\" />\\n      <Button round type=\\\"success\\\" icon=\\\"check-circle\\\" />\\n      <Button round type=\\\"warning\\\" icon=\\\"x-circle\\\" />\\n      <Button round type=\\\"danger\\\" icon=\\\"alert-circle\\\" />\\n      <Button round type=\\\"info\\\" icon=\\\"info\\\" />\\n    </div>\\n  </div>,\\n  mountNode,\\n);\\n\",meta: {\"order\":0,\"title\":{\"zh-CN\":\"基本\",\"en-US\":\"Basic\"},\"subtitle\":{\"zh-CN\":\"<p>基本用法，可以用<code>type</code>、<code>outline</code>、 <code>round</code> 和 <code>circle</code>来定义button的样式。</p>\\n\",\"en-US\":\"<p>Use <code>type</code>, <code>outline</code>, <code>round</code> and <code>circle</code> to define Button's style.</p>\\n\"}},preview: function previewer() {\n  var React = __webpack_require__(\"GiK3\");\n\n  var ReactDOM = __webpack_require__(\"O27J\");\n\n  var _dashkitUi = __webpack_require__(\"qMEF\");\n\n  return React.createElement(\"div\", {\n    className: \"button-wrapper\"\n  }, React.createElement(\"div\", {\n    className: \"button-list\"\n  }, React.createElement(_dashkitUi.Button, null, \"Default\"), React.createElement(_dashkitUi.Button, {\n    type: \"primary\"\n  }, \"Primary\"), React.createElement(_dashkitUi.Button, {\n    type: \"success\"\n  }, \"Success\"), React.createElement(_dashkitUi.Button, {\n    type: \"warning\"\n  }, \"Warning\"), React.createElement(_dashkitUi.Button, {\n    type: \"danger\"\n  }, \"Danger\"), React.createElement(_dashkitUi.Button, {\n    type: \"info\"\n  }, \"Info\"), React.createElement(_dashkitUi.Button, {\n    type: \"link\"\n  }, \"Link\")), React.createElement(\"div\", {\n    className: \"button-list\"\n  }, React.createElement(_dashkitUi.Button, {\n    outline: true\n  }, \"Outline\"), React.createElement(_dashkitUi.Button, {\n    type: \"primary\",\n    outline: true\n  }, \"Primary\"), React.createElement(_dashkitUi.Button, {\n    type: \"success\",\n    outline: true\n  }, \"Success\"), React.createElement(_dashkitUi.Button, {\n    type: \"warning\",\n    outline: true\n  }, \"Warning\"), React.createElement(_dashkitUi.Button, {\n    type: \"danger\",\n    outline: true\n  }, \"Danger\"), React.createElement(_dashkitUi.Button, {\n    type: \"info\",\n    outline: true\n  }, \"Info\")), React.createElement(\"div\", {\n    className: \"button-list\"\n  }, React.createElement(_dashkitUi.Button, {\n    round: true\n  }, \"Round\"), React.createElement(_dashkitUi.Button, {\n    type: \"primary\",\n    round: true\n  }, \"Primary\"), React.createElement(_dashkitUi.Button, {\n    type: \"success\",\n    round: true\n  }, \"Success\"), React.createElement(_dashkitUi.Button, {\n    type: \"warning\",\n    round: true\n  }, \"Warning\"), React.createElement(_dashkitUi.Button, {\n    type: \"danger\",\n    round: true\n  }, \"Danger\"), React.createElement(_dashkitUi.Button, {\n    type: \"info\",\n    round: true\n  }, \"Info\")), React.createElement(\"div\", {\n    className: \"button-list\"\n  }, React.createElement(_dashkitUi.Button, {\n    round: true,\n    icon: \"search\"\n  }), React.createElement(_dashkitUi.Button, {\n    round: true,\n    type: \"primary\",\n    icon: \"download\"\n  }), React.createElement(_dashkitUi.Button, {\n    round: true,\n    type: \"success\",\n    icon: \"check-circle\"\n  }), React.createElement(_dashkitUi.Button, {\n    round: true,\n    type: \"warning\",\n    icon: \"x-circle\"\n  }), React.createElement(_dashkitUi.Button, {\n    round: true,\n    type: \"danger\",\n    icon: \"alert-circle\"\n  }), React.createElement(_dashkitUi.Button, {\n    round: true,\n    type: \"info\",\n    icon: \"info\"\n  })));\n},}\n\n/***/ }),\n\n/***/ \"mcqB\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {code: \"import { Button } from 'dashkit-ui';\\n\\nReactDOM.render(\\n  <div className=\\\"button-wrapper\\\">\\n    <div className=\\\"button-list\\\">\\n      <Button>Default</Button>\\n      <Button disabled={true}>Default Disabled</Button>\\n    </div>\\n    <div className=\\\"button-list\\\">\\n      <Button type=\\\"primary\\\">Primary</Button>\\n      <Button type=\\\"primary\\\" disabled>\\n        Default Disabled\\n      </Button>\\n    </div>\\n    <div className=\\\"button-list\\\">\\n      <Button type=\\\"success\\\">Success</Button>\\n      <Button type=\\\"success\\\" disabled>\\n        Success Disabled\\n      </Button>\\n    </div>\\n    <div className=\\\"button-list\\\">\\n      <Button type=\\\"warning\\\">Warning</Button>\\n      <Button type=\\\"warning\\\" disabled>\\n        Warning Disabled\\n      </Button>\\n    </div>\\n    <div className=\\\"button-list\\\">\\n      <Button type=\\\"danger\\\">Danger</Button>\\n      <Button type=\\\"danger\\\" disabled>\\n        Danger Disabled\\n      </Button>\\n    </div>\\n    <div className=\\\"button-list\\\">\\n      <Button type=\\\"info\\\">Info</Button>\\n      <Button type=\\\"info\\\" disabled>\\n        Info Disabled\\n      </Button>\\n    </div>\\n    <div className=\\\"button-list\\\">\\n      <Button type=\\\"link\\\">Link</Button>\\n      <Button type=\\\"link\\\" disabled>\\n        Link Disabled\\n      </Button>\\n    </div>\\n  </div>,\\n  mountNode,\\n);\\n\",meta: {\"order\":2,\"title\":{\"zh-CN\":\"禁用\",\"en-US\":\"Disabled\"},\"subtitle\":{\"zh-CN\":\"<p>使用<code>disabled</code>来决定是否禁用按钮，默认值是<code>false</code>。</p>\\n\",\"en-US\":\"<p>Add the <code>disabled</code> property to determine if the button is disabled.</p>\\n\"}},preview: function previewer() {\n  var React = __webpack_require__(\"GiK3\");\n\n  var ReactDOM = __webpack_require__(\"O27J\");\n\n  var _dashkitUi = __webpack_require__(\"qMEF\");\n\n  return React.createElement(\"div\", {\n    className: \"button-wrapper\"\n  }, React.createElement(\"div\", {\n    className: \"button-list\"\n  }, React.createElement(_dashkitUi.Button, null, \"Default\"), React.createElement(_dashkitUi.Button, {\n    disabled: true\n  }, \"Default Disabled\")), React.createElement(\"div\", {\n    className: \"button-list\"\n  }, React.createElement(_dashkitUi.Button, {\n    type: \"primary\"\n  }, \"Primary\"), React.createElement(_dashkitUi.Button, {\n    type: \"primary\",\n    disabled: true\n  }, \"Default Disabled\")), React.createElement(\"div\", {\n    className: \"button-list\"\n  }, React.createElement(_dashkitUi.Button, {\n    type: \"success\"\n  }, \"Success\"), React.createElement(_dashkitUi.Button, {\n    type: \"success\",\n    disabled: true\n  }, \"Success Disabled\")), React.createElement(\"div\", {\n    className: \"button-list\"\n  }, React.createElement(_dashkitUi.Button, {\n    type: \"warning\"\n  }, \"Warning\"), React.createElement(_dashkitUi.Button, {\n    type: \"warning\",\n    disabled: true\n  }, \"Warning Disabled\")), React.createElement(\"div\", {\n    className: \"button-list\"\n  }, React.createElement(_dashkitUi.Button, {\n    type: \"danger\"\n  }, \"Danger\"), React.createElement(_dashkitUi.Button, {\n    type: \"danger\",\n    disabled: true\n  }, \"Danger Disabled\")), React.createElement(\"div\", {\n    className: \"button-list\"\n  }, React.createElement(_dashkitUi.Button, {\n    type: \"info\"\n  }, \"Info\"), React.createElement(_dashkitUi.Button, {\n    type: \"info\",\n    disabled: true\n  }, \"Info Disabled\")), React.createElement(\"div\", {\n    className: \"button-list\"\n  }, React.createElement(_dashkitUi.Button, {\n    type: \"link\"\n  }, \"Link\"), React.createElement(_dashkitUi.Button, {\n    type: \"link\",\n    disabled: true\n  }, \"Link Disabled\")));\n},}\n\n/***/ }),\n\n/***/ \"xMNe\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {code: \"import { Button } from 'dashkit-ui';\\n\\nReactDOM.render(\\n  <div className=\\\"button-list\\\">\\n    <Button size=\\\"large\\\">Large</Button>\\n    <Button size=\\\"default\\\">Default</Button>\\n    <Button size=\\\"small\\\">Small</Button>\\n    <Button type=\\\"primary\\\" size=\\\"large\\\" round icon=\\\"search\\\">\\n      Large\\n    </Button>\\n    <Button type=\\\"primary\\\" size=\\\"default\\\" round icon=\\\"search\\\">\\n      Default\\n    </Button>\\n    <Button type=\\\"primary\\\" size=\\\"small\\\" round icon=\\\"search\\\">\\n      Small\\n    </Button>\\n  </div>,\\n  mountNode,\\n);\\n\",meta: {\"order\":1,\"title\":{\"zh-CN\":\"尺寸\",\"en-US\":\"Sizes\"},\"subtitle\":{\"zh-CN\":\"<p>可以设置<code>size</code>属性来定义尺寸，属性值包括<code>large</code>、<code>default</code>、<code>small</code>，默认是<code>default</code>。</p>\\n\",\"en-US\":\"<p>If a large or small button is desired, set the size property to either <code>large</code> or <code>small</code> respectively. Omit the <code>size</code> property for a button with the default size.</p>\\n\"}},preview: function previewer() {\n  var React = __webpack_require__(\"GiK3\");\n\n  var ReactDOM = __webpack_require__(\"O27J\");\n\n  var _dashkitUi = __webpack_require__(\"qMEF\");\n\n  return React.createElement(\"div\", {\n    className: \"button-list\"\n  }, React.createElement(_dashkitUi.Button, {\n    size: \"large\"\n  }, \"Large\"), React.createElement(_dashkitUi.Button, {\n    size: \"default\"\n  }, \"Default\"), React.createElement(_dashkitUi.Button, {\n    size: \"small\"\n  }, \"Small\"), React.createElement(_dashkitUi.Button, {\n    type: \"primary\",\n    size: \"large\",\n    round: true,\n    icon: \"search\"\n  }, \"Large\"), React.createElement(_dashkitUi.Button, {\n    type: \"primary\",\n    size: \"default\",\n    round: true,\n    icon: \"search\"\n  }, \"Default\"), React.createElement(_dashkitUi.Button, {\n    type: \"primary\",\n    size: \"small\",\n    round: true,\n    icon: \"search\"\n  }, \"Small\"));\n},}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// js/15.fdfc3e1.js","module.exports = {\n markdown: \"<h1>Button</h1>\\n<p>Buttons for actions in forms, dialogs, and more with support for multiple sizes, states, and more.</p>\\n<div id=\\\"demos\\\"></div>\\n<h2>API</h2>\\n<div class=\\\"api-container\\\">\\n<table>\\n<thead>\\n<tr>\\n<th>Property</th>\\n<th>Description</th>\\n<th>Type</th>\\n<th>Default</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>className</td>\\n<td>className of the component</td>\\n<td>-</td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>size</td>\\n<td>button size, can be set to <code>small</code> <code>large</code> or omitted</td>\\n<td>string</td>\\n<td>default</td>\\n</tr>\\n<tr>\\n<td>type</td>\\n<td>button type, can be set to <code>primary</code> <code>success</code> <code>warning</code> <code>danger</code> <code>info</code> <code>link</code> or ommited</td>\\n<td>string</td>\\n<td>default</td>\\n</tr>\\n<tr>\\n<td>outline</td>\\n<td>determine whether it's a outline button</td>\\n<td>boolean</td>\\n<td>false</td>\\n</tr>\\n<tr>\\n<td>round</td>\\n<td>determine whether it's a round button</td>\\n<td>boolean</td>\\n<td>false</td>\\n</tr>\\n<tr>\\n<td>disabled</td>\\n<td>disable the button</td>\\n<td>boolean</td>\\n<td>false</td>\\n</tr>\\n<tr>\\n<td>loading</td>\\n<td>determine whether it's loading</td>\\n<td>boolean</td>\\n<td>false</td>\\n</tr>\\n<tr>\\n<td>icon</td>\\n<td>button icon, see <code>Icon</code> component</td>\\n<td>string</td>\\n<td>-</td>\\n</tr>\\n</tbody>\\n</table>\\n</div>\\n\",\n demos: {\n'basic': require(\"./demo/basic.md?+isDemo\"), \n'disabled': require(\"./demo/disabled.md?+isDemo\"), \n'size': require(\"./demo/size.md?+isDemo\")\n},};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/components/button/en-US.md\n// module id = 8cWC\n// module chunks = 15","module.exports = {code: \"import { Button } from 'dashkit-ui';\\n\\nReactDOM.render(\\n  <div className=\\\"button-wrapper\\\">\\n    <div className=\\\"button-list\\\">\\n      <Button>Default</Button>\\n      <Button type=\\\"primary\\\">Primary</Button>\\n      <Button type=\\\"success\\\">Success</Button>\\n      <Button type=\\\"warning\\\">Warning</Button>\\n      <Button type=\\\"danger\\\">Danger</Button>\\n      <Button type=\\\"info\\\">Info</Button>\\n      <Button type=\\\"link\\\">Link</Button>\\n    </div>\\n\\n    <div className=\\\"button-list\\\">\\n      <Button outline>Outline</Button>\\n      <Button type=\\\"primary\\\" outline>\\n        Primary\\n      </Button>\\n      <Button type=\\\"success\\\" outline>\\n        Success\\n      </Button>\\n      <Button type=\\\"warning\\\" outline>\\n        Warning\\n      </Button>\\n      <Button type=\\\"danger\\\" outline>\\n        Danger\\n      </Button>\\n      <Button type=\\\"info\\\" outline>\\n        Info\\n      </Button>\\n    </div>\\n\\n    <div className=\\\"button-list\\\">\\n      <Button round>Round</Button>\\n      <Button type=\\\"primary\\\" round>\\n        Primary\\n      </Button>\\n      <Button type=\\\"success\\\" round>\\n        Success\\n      </Button>\\n      <Button type=\\\"warning\\\" round>\\n        Warning\\n      </Button>\\n      <Button type=\\\"danger\\\" round>\\n        Danger\\n      </Button>\\n      <Button type=\\\"info\\\" round>\\n        Info\\n      </Button>\\n    </div>\\n\\n    <div className=\\\"button-list\\\">\\n      <Button round icon=\\\"search\\\" />\\n      <Button round type=\\\"primary\\\" icon=\\\"download\\\" />\\n      <Button round type=\\\"success\\\" icon=\\\"check-circle\\\" />\\n      <Button round type=\\\"warning\\\" icon=\\\"x-circle\\\" />\\n      <Button round type=\\\"danger\\\" icon=\\\"alert-circle\\\" />\\n      <Button round type=\\\"info\\\" icon=\\\"info\\\" />\\n    </div>\\n  </div>,\\n  mountNode,\\n);\\n\",meta: {\"order\":0,\"title\":{\"zh-CN\":\"基本\",\"en-US\":\"Basic\"},\"subtitle\":{\"zh-CN\":\"<p>基本用法，可以用<code>type</code>、<code>outline</code>、 <code>round</code> 和 <code>circle</code>来定义button的样式。</p>\\n\",\"en-US\":\"<p>Use <code>type</code>, <code>outline</code>, <code>round</code> and <code>circle</code> to define Button's style.</p>\\n\"}},preview: function previewer() {\n  var React = require(\"react\");\n\n  var ReactDOM = require(\"react-dom\");\n\n  var _dashkitUi = require(\"dashkit-ui\");\n\n  return React.createElement(\"div\", {\n    className: \"button-wrapper\"\n  }, React.createElement(\"div\", {\n    className: \"button-list\"\n  }, React.createElement(_dashkitUi.Button, null, \"Default\"), React.createElement(_dashkitUi.Button, {\n    type: \"primary\"\n  }, \"Primary\"), React.createElement(_dashkitUi.Button, {\n    type: \"success\"\n  }, \"Success\"), React.createElement(_dashkitUi.Button, {\n    type: \"warning\"\n  }, \"Warning\"), React.createElement(_dashkitUi.Button, {\n    type: \"danger\"\n  }, \"Danger\"), React.createElement(_dashkitUi.Button, {\n    type: \"info\"\n  }, \"Info\"), React.createElement(_dashkitUi.Button, {\n    type: \"link\"\n  }, \"Link\")), React.createElement(\"div\", {\n    className: \"button-list\"\n  }, React.createElement(_dashkitUi.Button, {\n    outline: true\n  }, \"Outline\"), React.createElement(_dashkitUi.Button, {\n    type: \"primary\",\n    outline: true\n  }, \"Primary\"), React.createElement(_dashkitUi.Button, {\n    type: \"success\",\n    outline: true\n  }, \"Success\"), React.createElement(_dashkitUi.Button, {\n    type: \"warning\",\n    outline: true\n  }, \"Warning\"), React.createElement(_dashkitUi.Button, {\n    type: \"danger\",\n    outline: true\n  }, \"Danger\"), React.createElement(_dashkitUi.Button, {\n    type: \"info\",\n    outline: true\n  }, \"Info\")), React.createElement(\"div\", {\n    className: \"button-list\"\n  }, React.createElement(_dashkitUi.Button, {\n    round: true\n  }, \"Round\"), React.createElement(_dashkitUi.Button, {\n    type: \"primary\",\n    round: true\n  }, \"Primary\"), React.createElement(_dashkitUi.Button, {\n    type: \"success\",\n    round: true\n  }, \"Success\"), React.createElement(_dashkitUi.Button, {\n    type: \"warning\",\n    round: true\n  }, \"Warning\"), React.createElement(_dashkitUi.Button, {\n    type: \"danger\",\n    round: true\n  }, \"Danger\"), React.createElement(_dashkitUi.Button, {\n    type: \"info\",\n    round: true\n  }, \"Info\")), React.createElement(\"div\", {\n    className: \"button-list\"\n  }, React.createElement(_dashkitUi.Button, {\n    round: true,\n    icon: \"search\"\n  }), React.createElement(_dashkitUi.Button, {\n    round: true,\n    type: \"primary\",\n    icon: \"download\"\n  }), React.createElement(_dashkitUi.Button, {\n    round: true,\n    type: \"success\",\n    icon: \"check-circle\"\n  }), React.createElement(_dashkitUi.Button, {\n    round: true,\n    type: \"warning\",\n    icon: \"x-circle\"\n  }), React.createElement(_dashkitUi.Button, {\n    round: true,\n    type: \"danger\",\n    icon: \"alert-circle\"\n  }), React.createElement(_dashkitUi.Button, {\n    round: true,\n    type: \"info\",\n    icon: \"info\"\n  })));\n},}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/components/button/demo/basic.md?+isDemo\n// module id = mBvl\n// module chunks = 15","module.exports = {code: \"import { Button } from 'dashkit-ui';\\n\\nReactDOM.render(\\n  <div className=\\\"button-wrapper\\\">\\n    <div className=\\\"button-list\\\">\\n      <Button>Default</Button>\\n      <Button disabled={true}>Default Disabled</Button>\\n    </div>\\n    <div className=\\\"button-list\\\">\\n      <Button type=\\\"primary\\\">Primary</Button>\\n      <Button type=\\\"primary\\\" disabled>\\n        Default Disabled\\n      </Button>\\n    </div>\\n    <div className=\\\"button-list\\\">\\n      <Button type=\\\"success\\\">Success</Button>\\n      <Button type=\\\"success\\\" disabled>\\n        Success Disabled\\n      </Button>\\n    </div>\\n    <div className=\\\"button-list\\\">\\n      <Button type=\\\"warning\\\">Warning</Button>\\n      <Button type=\\\"warning\\\" disabled>\\n        Warning Disabled\\n      </Button>\\n    </div>\\n    <div className=\\\"button-list\\\">\\n      <Button type=\\\"danger\\\">Danger</Button>\\n      <Button type=\\\"danger\\\" disabled>\\n        Danger Disabled\\n      </Button>\\n    </div>\\n    <div className=\\\"button-list\\\">\\n      <Button type=\\\"info\\\">Info</Button>\\n      <Button type=\\\"info\\\" disabled>\\n        Info Disabled\\n      </Button>\\n    </div>\\n    <div className=\\\"button-list\\\">\\n      <Button type=\\\"link\\\">Link</Button>\\n      <Button type=\\\"link\\\" disabled>\\n        Link Disabled\\n      </Button>\\n    </div>\\n  </div>,\\n  mountNode,\\n);\\n\",meta: {\"order\":2,\"title\":{\"zh-CN\":\"禁用\",\"en-US\":\"Disabled\"},\"subtitle\":{\"zh-CN\":\"<p>使用<code>disabled</code>来决定是否禁用按钮，默认值是<code>false</code>。</p>\\n\",\"en-US\":\"<p>Add the <code>disabled</code> property to determine if the button is disabled.</p>\\n\"}},preview: function previewer() {\n  var React = require(\"react\");\n\n  var ReactDOM = require(\"react-dom\");\n\n  var _dashkitUi = require(\"dashkit-ui\");\n\n  return React.createElement(\"div\", {\n    className: \"button-wrapper\"\n  }, React.createElement(\"div\", {\n    className: \"button-list\"\n  }, React.createElement(_dashkitUi.Button, null, \"Default\"), React.createElement(_dashkitUi.Button, {\n    disabled: true\n  }, \"Default Disabled\")), React.createElement(\"div\", {\n    className: \"button-list\"\n  }, React.createElement(_dashkitUi.Button, {\n    type: \"primary\"\n  }, \"Primary\"), React.createElement(_dashkitUi.Button, {\n    type: \"primary\",\n    disabled: true\n  }, \"Default Disabled\")), React.createElement(\"div\", {\n    className: \"button-list\"\n  }, React.createElement(_dashkitUi.Button, {\n    type: \"success\"\n  }, \"Success\"), React.createElement(_dashkitUi.Button, {\n    type: \"success\",\n    disabled: true\n  }, \"Success Disabled\")), React.createElement(\"div\", {\n    className: \"button-list\"\n  }, React.createElement(_dashkitUi.Button, {\n    type: \"warning\"\n  }, \"Warning\"), React.createElement(_dashkitUi.Button, {\n    type: \"warning\",\n    disabled: true\n  }, \"Warning Disabled\")), React.createElement(\"div\", {\n    className: \"button-list\"\n  }, React.createElement(_dashkitUi.Button, {\n    type: \"danger\"\n  }, \"Danger\"), React.createElement(_dashkitUi.Button, {\n    type: \"danger\",\n    disabled: true\n  }, \"Danger Disabled\")), React.createElement(\"div\", {\n    className: \"button-list\"\n  }, React.createElement(_dashkitUi.Button, {\n    type: \"info\"\n  }, \"Info\"), React.createElement(_dashkitUi.Button, {\n    type: \"info\",\n    disabled: true\n  }, \"Info Disabled\")), React.createElement(\"div\", {\n    className: \"button-list\"\n  }, React.createElement(_dashkitUi.Button, {\n    type: \"link\"\n  }, \"Link\"), React.createElement(_dashkitUi.Button, {\n    type: \"link\",\n    disabled: true\n  }, \"Link Disabled\")));\n},}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/components/button/demo/disabled.md?+isDemo\n// module id = mcqB\n// module chunks = 15","module.exports = {code: \"import { Button } from 'dashkit-ui';\\n\\nReactDOM.render(\\n  <div className=\\\"button-list\\\">\\n    <Button size=\\\"large\\\">Large</Button>\\n    <Button size=\\\"default\\\">Default</Button>\\n    <Button size=\\\"small\\\">Small</Button>\\n    <Button type=\\\"primary\\\" size=\\\"large\\\" round icon=\\\"search\\\">\\n      Large\\n    </Button>\\n    <Button type=\\\"primary\\\" size=\\\"default\\\" round icon=\\\"search\\\">\\n      Default\\n    </Button>\\n    <Button type=\\\"primary\\\" size=\\\"small\\\" round icon=\\\"search\\\">\\n      Small\\n    </Button>\\n  </div>,\\n  mountNode,\\n);\\n\",meta: {\"order\":1,\"title\":{\"zh-CN\":\"尺寸\",\"en-US\":\"Sizes\"},\"subtitle\":{\"zh-CN\":\"<p>可以设置<code>size</code>属性来定义尺寸，属性值包括<code>large</code>、<code>default</code>、<code>small</code>，默认是<code>default</code>。</p>\\n\",\"en-US\":\"<p>If a large or small button is desired, set the size property to either <code>large</code> or <code>small</code> respectively. Omit the <code>size</code> property for a button with the default size.</p>\\n\"}},preview: function previewer() {\n  var React = require(\"react\");\n\n  var ReactDOM = require(\"react-dom\");\n\n  var _dashkitUi = require(\"dashkit-ui\");\n\n  return React.createElement(\"div\", {\n    className: \"button-list\"\n  }, React.createElement(_dashkitUi.Button, {\n    size: \"large\"\n  }, \"Large\"), React.createElement(_dashkitUi.Button, {\n    size: \"default\"\n  }, \"Default\"), React.createElement(_dashkitUi.Button, {\n    size: \"small\"\n  }, \"Small\"), React.createElement(_dashkitUi.Button, {\n    type: \"primary\",\n    size: \"large\",\n    round: true,\n    icon: \"search\"\n  }, \"Large\"), React.createElement(_dashkitUi.Button, {\n    type: \"primary\",\n    size: \"default\",\n    round: true,\n    icon: \"search\"\n  }, \"Default\"), React.createElement(_dashkitUi.Button, {\n    type: \"primary\",\n    size: \"small\",\n    round: true,\n    icon: \"search\"\n  }, \"Small\"));\n},}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/components/button/demo/size.md?+isDemo\n// module id = xMNe\n// module chunks = 15"],"sourceRoot":""}