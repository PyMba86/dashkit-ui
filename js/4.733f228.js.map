{"version":3,"sources":["webpack:///js/4.733f228.js","webpack:///./docs/components/input/demo/basic.md?6b0f","webpack:///./docs/components/input/en-US.md","webpack:///./docs/components/input/demo/disabled.md?413c","webpack:///./docs/components/input/demo/prefix-sufix.md?7d03","webpack:///./docs/components/input/demo/size.md?cc46","webpack:///./docs/components/input/demo/theme.md?7880"],"names":["webpackJsonp","Hx5Y","module","exports","__webpack_require__","code","meta","order","title","zh-CN","en-US","subtitle","preview","React","_dashkitUi","inputStyle","marginRight","createElement","Input","defaultValue","style","disabled","Ixv2","markdown","demos","basic","prefix-sufix","size","theme","Jqvo","placeholder","Muxd","prefix","suffix","gQx+","marginBottom","className","xCM3"],"mappings":"AAAAA,cAAc,IAERC,KACA,SAAUC,EAAQC,EAASC,GCHjCF,EAAAC,SAAkBE,KAAA,sPAA0PC,MAAWC,MAAA,EAAAC,OAAmBC,QAAA,KAAAC,QAAA,SAA6BC,UAAaF,QAAA,iBAAAC,QAAA,0BAA0DE,QAAA,WAC9Y,GAAAC,GAAcT,EAAQ,QAItBU,GAFiBV,EAAQ,QAENA,EAAQ,SAE3BW,GACAC,YAAA,GAEA,OAAAH,GAAAI,cAAA,WAAAJ,EAAAI,cAAAH,EAAAI,OACAC,aAAA,SACAC,MAAAL,IACGF,EAAAI,cAAAH,EAAAI,OACHG,UAAA,EACAF,aAAA,eDWMG,KACA,SAAUpB,EAAQC,EAASC,GE3BjCF,EAAAC,SACAoB,SAAA,g3EACAC,OACAC,MAASrB,EAAQ,QACjBiB,SAAYjB,EAAQ,QACpBsB,eAAgBtB,EAAQ,QACxBuB,KAAQvB,EAAQ,QAChBwB,MAASxB,EAAQ,WFkCXyB,KACA,SAAU3B,EAAQC,EAASC,GG1CjCF,EAAAC,SAAkBE,KAAA,0IAA4IC,MAAWC,MAAA,EAAAC,OAAmBC,QAAA,KAAAC,QAAA,YAAgCC,UAAaF,QAAA,qEAAAC,QAAA,2FAA+KE,QAAA,WACxZ,GAAAC,GAAcT,EAAQ,QAItBU,GAFiBV,EAAQ,QAENA,EAAQ,QAE3B,OAAAS,GAAAI,cAAAH,EAAAI,OACAY,YAAA,0BACAT,UAAA,OHkDMU,KACA,SAAU7B,EAAQC,EAASC,GI5DjCF,EAAAC,SAAkBE,KAAA,iKAAuKC,MAAWC,MAAA,EAAAC,OAAmBC,QAAA,OAAAC,QAAA,qBAA2CC,UAAaF,QAAA,gEAAAC,QAAA,iFAAgKE,QAAA,WAC/a,GAAAC,GAAcT,EAAQ,QAItBU,GAFiBV,EAAQ,QAENA,EAAQ,QAE3B,OAAAS,GAAAI,cAAAH,EAAAI,OACAY,YAAA,sBACAE,OAAA,OACAC,OAAA,YJoEMC,OACA,SAAUhC,EAAQC,EAASC,GK/EjCF,EAAAC,SAAkBE,KAAA,0ZAAwaC,MAAWC,MAAA,EAAAC,OAAmBC,QAAA,KAAAC,QAAA,QAA4BC,UAAaF,QAAA,iIAAAC,QAAA,mNAAmWE,QAAA,WACp2B,GAAAC,GAAcT,EAAQ,QAItBU,GAFiBV,EAAQ,QAENA,EAAQ,SAE3BW,GACAC,YAAA,GACAmB,aAAA,GAEA,OAAAtB,GAAAI,cAAA,OACAmB,UAAA,cACGvB,EAAAI,cAAAH,EAAAI,OACHY,YAAA,aACAH,KAAA,QACAP,MAAAL,IACGF,EAAAI,cAAAH,EAAAI,OACHY,YAAA,eACAH,KAAA,UACAP,MAAAL,IACGF,EAAAI,cAAAH,EAAAI,OACHY,YAAA,aACAH,KAAA,QACAP,MAAAL,QLuFMsB,KACA,SAAUnC,EAAQC,EAASC,GMhHjCF,EAAAC,SAAkBE,KAAA,odAAseC,MAAWC,MAAA,EAAAC,OAAmBC,QAAA,KAAAC,QAAA,QAA4BC,UAAaF,QAAA,uJAAAC,QAAA,yNAA+XE,QAAA,WAC97B,GAAAC,GAAcT,EAAQ,QAItBU,GAFiBV,EAAQ,QAENA,EAAQ,SAE3BW,GACAC,YAAA,GACAmB,aAAA,GAEA,OAAAtB,GAAAI,cAAA,OACAmB,UAAA,cACGvB,EAAAI,cAAAH,EAAAI,OACHY,YAAA,UACAF,MAAA,UACAR,MAAAL,IACGF,EAAAI,cAAAH,EAAAI,OACHY,YAAA,QACAF,MAAA,QACAR,MAAAL,IACGF,EAAAI,cAAAH,EAAAI,OACHY,YAAA,OACAF,MAAA,OACAR,MAAAL,IACGF,EAAAI,cAAAH,EAAAI,OACHY,YAAA,UACAF,MAAA,UACAR,MAAAL","file":"js/4.733f228.js","sourcesContent":["webpackJsonp([4],{\n\n/***/ \"Hx5Y\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {code: \"import { Input } from 'dashkit-ui';\\nconst inputStyle = {\\n  marginRight: 10,\\n};\\nReactDOM.render(\\n  <div>\\n    <Input defaultValue=\\\"Hello.\\\" style={inputStyle} />\\n    <Input disabled defaultValue=\\\"Hello.\\\" />\\n  </div>,\\n  mountNode,\\n);\\n\",meta: {\"order\":0,\"title\":{\"zh-CN\":\"基本\",\"en-US\":\"Basic\"},\"subtitle\":{\"zh-CN\":\"<p>基本用法。</p>\\n\",\"en-US\":\"<p>Basic usage.</p>\\n\"}},preview: function previewer() {\n  var React = __webpack_require__(\"GiK3\");\n\n  var ReactDOM = __webpack_require__(\"O27J\");\n\n  var _dashkitUi = __webpack_require__(\"qMEF\");\n\n  var inputStyle = {\n    marginRight: 10\n  };\n  return React.createElement(\"div\", null, React.createElement(_dashkitUi.Input, {\n    defaultValue: \"Hello.\",\n    style: inputStyle\n  }), React.createElement(_dashkitUi.Input, {\n    disabled: true,\n    defaultValue: \"Hello.\"\n  }));\n},}\n\n/***/ }),\n\n/***/ \"Ixv2\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n markdown: \"<h1>Input</h1>\\n<p>Dashkit supports all of Bootstrap's default form styling in addition to a handful of new input types and features.</p>\\n<div id=\\\"demos\\\"></div>\\n<h2>API</h2>\\n<div class=\\\"api-container\\\">\\n<table>\\n<thead>\\n<tr>\\n<th>Property</th>\\n<th>Description</th>\\n<th>Type</th>\\n<th>Default</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>className</td>\\n<td>className of the component</td>\\n<td>-</td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>size</td>\\n<td>input size, can be set to <code>small</code> <code>large</code> or omitted</td>\\n<td>string</td>\\n<td>default</td>\\n</tr>\\n<tr>\\n<td>name</td>\\n<td>name of the component</td>\\n<td>string</td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>disabled</td>\\n<td>disable the componnet</td>\\n<td>boolean</td>\\n<td>false</td>\\n</tr>\\n<tr>\\n<td>value</td>\\n<td>The input content value</td>\\n<td>string</td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>defaultValue</td>\\n<td>The initial input content</td>\\n<td>string</td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>placeholder</td>\\n<td>The placeholder of input</td>\\n<td>string</td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>type</td>\\n<td>type of input</td>\\n<td><code>'text' | 'password' | 'number'</code></td>\\n<td>text</td>\\n</tr>\\n<tr>\\n<td>digits</td>\\n<td>digits of number input</td>\\n<td>number</td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>prefix</td>\\n<td>The prefix icon for the Input.</td>\\n<td>icon type</td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>prefixClassName</td>\\n<td>The className of prefix icon</td>\\n<td>string</td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>suffix</td>\\n<td>The prefix icon for the Input.</td>\\n<td>icon type</td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>suffixClassName</td>\\n<td>The className of suffix icon</td>\\n<td>string</td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>wrapperClassName</td>\\n<td>The className of suffix icon</td>\\n<td>string</td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>wrapperRef</td>\\n<td>ref of the wrapper</td>\\n<td><code>React.RefObject&lt;HTMLDivElement&gt;</code></td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>onChange</td>\\n<td>value of input is changed</td>\\n<td><code>React.RefObject&lt;HTMLDivElement&gt;</code></td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>onFocus</td>\\n<td>Called when focus</td>\\n<td><code>(event: React.ChangeEvent&lt;HTMLInputElement&gt;) =&gt; void;</code></td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>onBlur</td>\\n<td>Called when blur</td>\\n<td><code>(event: React.ChangeEvent&lt;HTMLInputElement&gt;) =&gt; void;</code></td>\\n<td>-</td>\\n</tr>\\n</tbody>\\n</table>\\n</div>\\n\",\n demos: {\n'basic': __webpack_require__(\"Hx5Y\"), \n'disabled': __webpack_require__(\"Jqvo\"), \n'prefix-sufix': __webpack_require__(\"Muxd\"), \n'size': __webpack_require__(\"gQx+\"), \n'theme': __webpack_require__(\"xCM3\")\n},};\n\n/***/ }),\n\n/***/ \"Jqvo\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {code: \"import { Input } from 'dashkit-ui';\\n\\nReactDOM.render(<Input placeholder=\\\"This is a diabled Input\\\" disabled={true} />, mountNode);\\n\",meta: {\"order\":2,\"title\":{\"zh-CN\":\"禁用\",\"en-US\":\"Disabled\"},\"subtitle\":{\"zh-CN\":\"<p>使用<code>disabled</code>来决定是否禁用输入框，默认值是<code>false</code>。</p>\\n\",\"en-US\":\"<p>Add the <code>disabled</code> property to determine if the input is disabled.</p>\\n\"}},preview: function previewer() {\n  var React = __webpack_require__(\"GiK3\");\n\n  var ReactDOM = __webpack_require__(\"O27J\");\n\n  var _dashkitUi = __webpack_require__(\"qMEF\");\n\n  return React.createElement(_dashkitUi.Input, {\n    placeholder: \"This is a diabled Input\",\n    disabled: true\n  });\n},}\n\n/***/ }),\n\n/***/ \"Muxd\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {code: \"import { Input, Tooltip, Icon } from 'dashkit-ui';\\n\\nReactDOM.render(<Input placeholder=\\\"Enter your username\\\" prefix=\\\"user\\\" suffix=\\\"info\\\" />, mountNode);\\n\",meta: {\"order\":3,\"title\":{\"zh-CN\":\"前缀后缀\",\"en-US\":\"prefix and suffix\"},\"subtitle\":{\"zh-CN\":\"<p>使用<code>prefix</code>或者<code>suffix</code>来增加前缀或者后缀。</p>\\n\",\"en-US\":\"<p>Add <code>prefix</code> or <code>suffix</code> icons inside input..</p>\\n\"}},preview: function previewer() {\n  var React = __webpack_require__(\"GiK3\");\n\n  var ReactDOM = __webpack_require__(\"O27J\");\n\n  var _dashkitUi = __webpack_require__(\"qMEF\");\n\n  return React.createElement(_dashkitUi.Input, {\n    placeholder: \"Enter your username\",\n    prefix: \"user\",\n    suffix: \"info\"\n  });\n},}\n\n/***/ }),\n\n/***/ \"gQx+\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {code: \"import { Input } from 'dashkit-ui';\\nconst inputStyle = {\\n  marginRight: 10,\\n  marginBottom: 10,\\n};\\n\\nReactDOM.render(\\n  <div className=\\\"input-list\\\">\\n    <Input placeholder=\\\"large size\\\" size=\\\"large\\\" style={inputStyle} />\\n    <Input placeholder=\\\"default size\\\" size=\\\"default\\\" style={inputStyle} />\\n    <Input placeholder=\\\"small size\\\" size=\\\"small\\\" style={inputStyle} />\\n  </div>,\\n  mountNode,\\n);\\n\",meta: {\"order\":1,\"title\":{\"zh-CN\":\"尺寸\",\"en-US\":\"Size\"},\"subtitle\":{\"zh-CN\":\"<p>可以设置<code>size</code>属性来定义尺寸，属性值包括<code>large</code>、<code>default</code>、<code>small</code>，默认是<code>default</code>。</p>\\n\",\"en-US\":\"<p>If a large or small button is desired, set the size property to either <code>large</code> or <code>small</code> respectively. Omit the <code>size</code> property for a button with the default size.</p>\\n\"}},preview: function previewer() {\n  var React = __webpack_require__(\"GiK3\");\n\n  var ReactDOM = __webpack_require__(\"O27J\");\n\n  var _dashkitUi = __webpack_require__(\"qMEF\");\n\n  var inputStyle = {\n    marginRight: 10,\n    marginBottom: 10\n  };\n  return React.createElement(\"div\", {\n    className: \"input-list\"\n  }, React.createElement(_dashkitUi.Input, {\n    placeholder: \"large size\",\n    size: \"large\",\n    style: inputStyle\n  }), React.createElement(_dashkitUi.Input, {\n    placeholder: \"default size\",\n    size: \"default\",\n    style: inputStyle\n  }), React.createElement(_dashkitUi.Input, {\n    placeholder: \"small size\",\n    size: \"small\",\n    style: inputStyle\n  }));\n},}\n\n/***/ }),\n\n/***/ \"xCM3\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {code: \"import { Input } from 'dashkit-ui';\\nconst inputStyle = {\\n  marginRight: 10,\\n  marginBottom: 10,\\n};\\n\\nReactDOM.render(\\n  <div className=\\\"input-list\\\">\\n    <Input placeholder=\\\"default\\\" theme=\\\"default\\\" style={inputStyle} />\\n    <Input placeholder=\\\"error\\\" theme=\\\"error\\\" style={inputStyle} />\\n    <Input placeholder=\\\"info\\\" theme=\\\"info\\\" style={inputStyle} />\\n    <Input placeholder=\\\"warning\\\" theme=\\\"warning\\\" style={inputStyle} />\\n  </div>,\\n  mountNode,\\n);\\n\",meta: {\"order\":5,\"title\":{\"zh-CN\":\"尺寸\",\"en-US\":\"Size\"},\"subtitle\":{\"zh-CN\":\"<p>可以设置<code>theme</code>属性来定义颜色，属性值包括<code>default</code>、<code>error</code>、<code>success</code>, <code>info</code>，默认是<code>default</code>。</p>\\n\",\"en-US\":\"<p>set the theme property to either <code>default</code>, <code>error</code>, <code>success</code>, <code>info</code>,  respectively. Omit the <code>theme</code> property for a button with the default size.</p>\\n\"}},preview: function previewer() {\n  var React = __webpack_require__(\"GiK3\");\n\n  var ReactDOM = __webpack_require__(\"O27J\");\n\n  var _dashkitUi = __webpack_require__(\"qMEF\");\n\n  var inputStyle = {\n    marginRight: 10,\n    marginBottom: 10\n  };\n  return React.createElement(\"div\", {\n    className: \"input-list\"\n  }, React.createElement(_dashkitUi.Input, {\n    placeholder: \"default\",\n    theme: \"default\",\n    style: inputStyle\n  }), React.createElement(_dashkitUi.Input, {\n    placeholder: \"error\",\n    theme: \"error\",\n    style: inputStyle\n  }), React.createElement(_dashkitUi.Input, {\n    placeholder: \"info\",\n    theme: \"info\",\n    style: inputStyle\n  }), React.createElement(_dashkitUi.Input, {\n    placeholder: \"warning\",\n    theme: \"warning\",\n    style: inputStyle\n  }));\n},}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// js/4.733f228.js","module.exports = {code: \"import { Input } from 'dashkit-ui';\\nconst inputStyle = {\\n  marginRight: 10,\\n};\\nReactDOM.render(\\n  <div>\\n    <Input defaultValue=\\\"Hello.\\\" style={inputStyle} />\\n    <Input disabled defaultValue=\\\"Hello.\\\" />\\n  </div>,\\n  mountNode,\\n);\\n\",meta: {\"order\":0,\"title\":{\"zh-CN\":\"基本\",\"en-US\":\"Basic\"},\"subtitle\":{\"zh-CN\":\"<p>基本用法。</p>\\n\",\"en-US\":\"<p>Basic usage.</p>\\n\"}},preview: function previewer() {\n  var React = require(\"react\");\n\n  var ReactDOM = require(\"react-dom\");\n\n  var _dashkitUi = require(\"dashkit-ui\");\n\n  var inputStyle = {\n    marginRight: 10\n  };\n  return React.createElement(\"div\", null, React.createElement(_dashkitUi.Input, {\n    defaultValue: \"Hello.\",\n    style: inputStyle\n  }), React.createElement(_dashkitUi.Input, {\n    disabled: true,\n    defaultValue: \"Hello.\"\n  }));\n},}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/components/input/demo/basic.md?+isDemo\n// module id = Hx5Y\n// module chunks = 4","module.exports = {\n markdown: \"<h1>Input</h1>\\n<p>Dashkit supports all of Bootstrap's default form styling in addition to a handful of new input types and features.</p>\\n<div id=\\\"demos\\\"></div>\\n<h2>API</h2>\\n<div class=\\\"api-container\\\">\\n<table>\\n<thead>\\n<tr>\\n<th>Property</th>\\n<th>Description</th>\\n<th>Type</th>\\n<th>Default</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>className</td>\\n<td>className of the component</td>\\n<td>-</td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>size</td>\\n<td>input size, can be set to <code>small</code> <code>large</code> or omitted</td>\\n<td>string</td>\\n<td>default</td>\\n</tr>\\n<tr>\\n<td>name</td>\\n<td>name of the component</td>\\n<td>string</td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>disabled</td>\\n<td>disable the componnet</td>\\n<td>boolean</td>\\n<td>false</td>\\n</tr>\\n<tr>\\n<td>value</td>\\n<td>The input content value</td>\\n<td>string</td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>defaultValue</td>\\n<td>The initial input content</td>\\n<td>string</td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>placeholder</td>\\n<td>The placeholder of input</td>\\n<td>string</td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>type</td>\\n<td>type of input</td>\\n<td><code>'text' | 'password' | 'number'</code></td>\\n<td>text</td>\\n</tr>\\n<tr>\\n<td>digits</td>\\n<td>digits of number input</td>\\n<td>number</td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>prefix</td>\\n<td>The prefix icon for the Input.</td>\\n<td>icon type</td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>prefixClassName</td>\\n<td>The className of prefix icon</td>\\n<td>string</td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>suffix</td>\\n<td>The prefix icon for the Input.</td>\\n<td>icon type</td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>suffixClassName</td>\\n<td>The className of suffix icon</td>\\n<td>string</td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>wrapperClassName</td>\\n<td>The className of suffix icon</td>\\n<td>string</td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>wrapperRef</td>\\n<td>ref of the wrapper</td>\\n<td><code>React.RefObject&lt;HTMLDivElement&gt;</code></td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>onChange</td>\\n<td>value of input is changed</td>\\n<td><code>React.RefObject&lt;HTMLDivElement&gt;</code></td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>onFocus</td>\\n<td>Called when focus</td>\\n<td><code>(event: React.ChangeEvent&lt;HTMLInputElement&gt;) =&gt; void;</code></td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>onBlur</td>\\n<td>Called when blur</td>\\n<td><code>(event: React.ChangeEvent&lt;HTMLInputElement&gt;) =&gt; void;</code></td>\\n<td>-</td>\\n</tr>\\n</tbody>\\n</table>\\n</div>\\n\",\n demos: {\n'basic': require(\"./demo/basic.md?+isDemo\"), \n'disabled': require(\"./demo/disabled.md?+isDemo\"), \n'prefix-sufix': require(\"./demo/prefix-sufix.md?+isDemo\"), \n'size': require(\"./demo/size.md?+isDemo\"), \n'theme': require(\"./demo/theme.md?+isDemo\")\n},};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/components/input/en-US.md\n// module id = Ixv2\n// module chunks = 4","module.exports = {code: \"import { Input } from 'dashkit-ui';\\n\\nReactDOM.render(<Input placeholder=\\\"This is a diabled Input\\\" disabled={true} />, mountNode);\\n\",meta: {\"order\":2,\"title\":{\"zh-CN\":\"禁用\",\"en-US\":\"Disabled\"},\"subtitle\":{\"zh-CN\":\"<p>使用<code>disabled</code>来决定是否禁用输入框，默认值是<code>false</code>。</p>\\n\",\"en-US\":\"<p>Add the <code>disabled</code> property to determine if the input is disabled.</p>\\n\"}},preview: function previewer() {\n  var React = require(\"react\");\n\n  var ReactDOM = require(\"react-dom\");\n\n  var _dashkitUi = require(\"dashkit-ui\");\n\n  return React.createElement(_dashkitUi.Input, {\n    placeholder: \"This is a diabled Input\",\n    disabled: true\n  });\n},}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/components/input/demo/disabled.md?+isDemo\n// module id = Jqvo\n// module chunks = 4","module.exports = {code: \"import { Input, Tooltip, Icon } from 'dashkit-ui';\\n\\nReactDOM.render(<Input placeholder=\\\"Enter your username\\\" prefix=\\\"user\\\" suffix=\\\"info\\\" />, mountNode);\\n\",meta: {\"order\":3,\"title\":{\"zh-CN\":\"前缀后缀\",\"en-US\":\"prefix and suffix\"},\"subtitle\":{\"zh-CN\":\"<p>使用<code>prefix</code>或者<code>suffix</code>来增加前缀或者后缀。</p>\\n\",\"en-US\":\"<p>Add <code>prefix</code> or <code>suffix</code> icons inside input..</p>\\n\"}},preview: function previewer() {\n  var React = require(\"react\");\n\n  var ReactDOM = require(\"react-dom\");\n\n  var _dashkitUi = require(\"dashkit-ui\");\n\n  return React.createElement(_dashkitUi.Input, {\n    placeholder: \"Enter your username\",\n    prefix: \"user\",\n    suffix: \"info\"\n  });\n},}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/components/input/demo/prefix-sufix.md?+isDemo\n// module id = Muxd\n// module chunks = 4","module.exports = {code: \"import { Input } from 'dashkit-ui';\\nconst inputStyle = {\\n  marginRight: 10,\\n  marginBottom: 10,\\n};\\n\\nReactDOM.render(\\n  <div className=\\\"input-list\\\">\\n    <Input placeholder=\\\"large size\\\" size=\\\"large\\\" style={inputStyle} />\\n    <Input placeholder=\\\"default size\\\" size=\\\"default\\\" style={inputStyle} />\\n    <Input placeholder=\\\"small size\\\" size=\\\"small\\\" style={inputStyle} />\\n  </div>,\\n  mountNode,\\n);\\n\",meta: {\"order\":1,\"title\":{\"zh-CN\":\"尺寸\",\"en-US\":\"Size\"},\"subtitle\":{\"zh-CN\":\"<p>可以设置<code>size</code>属性来定义尺寸，属性值包括<code>large</code>、<code>default</code>、<code>small</code>，默认是<code>default</code>。</p>\\n\",\"en-US\":\"<p>If a large or small button is desired, set the size property to either <code>large</code> or <code>small</code> respectively. Omit the <code>size</code> property for a button with the default size.</p>\\n\"}},preview: function previewer() {\n  var React = require(\"react\");\n\n  var ReactDOM = require(\"react-dom\");\n\n  var _dashkitUi = require(\"dashkit-ui\");\n\n  var inputStyle = {\n    marginRight: 10,\n    marginBottom: 10\n  };\n  return React.createElement(\"div\", {\n    className: \"input-list\"\n  }, React.createElement(_dashkitUi.Input, {\n    placeholder: \"large size\",\n    size: \"large\",\n    style: inputStyle\n  }), React.createElement(_dashkitUi.Input, {\n    placeholder: \"default size\",\n    size: \"default\",\n    style: inputStyle\n  }), React.createElement(_dashkitUi.Input, {\n    placeholder: \"small size\",\n    size: \"small\",\n    style: inputStyle\n  }));\n},}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/components/input/demo/size.md?+isDemo\n// module id = gQx+\n// module chunks = 4","module.exports = {code: \"import { Input } from 'dashkit-ui';\\nconst inputStyle = {\\n  marginRight: 10,\\n  marginBottom: 10,\\n};\\n\\nReactDOM.render(\\n  <div className=\\\"input-list\\\">\\n    <Input placeholder=\\\"default\\\" theme=\\\"default\\\" style={inputStyle} />\\n    <Input placeholder=\\\"error\\\" theme=\\\"error\\\" style={inputStyle} />\\n    <Input placeholder=\\\"info\\\" theme=\\\"info\\\" style={inputStyle} />\\n    <Input placeholder=\\\"warning\\\" theme=\\\"warning\\\" style={inputStyle} />\\n  </div>,\\n  mountNode,\\n);\\n\",meta: {\"order\":5,\"title\":{\"zh-CN\":\"尺寸\",\"en-US\":\"Size\"},\"subtitle\":{\"zh-CN\":\"<p>可以设置<code>theme</code>属性来定义颜色，属性值包括<code>default</code>、<code>error</code>、<code>success</code>, <code>info</code>，默认是<code>default</code>。</p>\\n\",\"en-US\":\"<p>set the theme property to either <code>default</code>, <code>error</code>, <code>success</code>, <code>info</code>,  respectively. Omit the <code>theme</code> property for a button with the default size.</p>\\n\"}},preview: function previewer() {\n  var React = require(\"react\");\n\n  var ReactDOM = require(\"react-dom\");\n\n  var _dashkitUi = require(\"dashkit-ui\");\n\n  var inputStyle = {\n    marginRight: 10,\n    marginBottom: 10\n  };\n  return React.createElement(\"div\", {\n    className: \"input-list\"\n  }, React.createElement(_dashkitUi.Input, {\n    placeholder: \"default\",\n    theme: \"default\",\n    style: inputStyle\n  }), React.createElement(_dashkitUi.Input, {\n    placeholder: \"error\",\n    theme: \"error\",\n    style: inputStyle\n  }), React.createElement(_dashkitUi.Input, {\n    placeholder: \"info\",\n    theme: \"info\",\n    style: inputStyle\n  }), React.createElement(_dashkitUi.Input, {\n    placeholder: \"warning\",\n    theme: \"warning\",\n    style: inputStyle\n  }));\n},}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/components/input/demo/theme.md?+isDemo\n// module id = xCM3\n// module chunks = 4"],"sourceRoot":""}