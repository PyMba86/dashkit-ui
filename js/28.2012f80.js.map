{"version":3,"sources":["webpack:///js/28.2012f80.js","webpack:///./docs/calendar/min-max.md","webpack:///./src/Calendar/utils.ts"],"names":["webpackJsonp","KjkI","module","exports","__webpack_require__","code","meta","order","title","zh-CN","en-US","subtitle","__content","preview","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","onChange","console","log","getMaxDate","date","Date","setHours","_utils","addDays","getMinDate","addMonths","React","_createClass","defineProperties","target","props","i","length","descriptor","defineProperty","key","protoProps","staticProps","_dashkitUi","Demo","_React$Component","this","getPrototypeOf","apply","arguments","createElement","Calendar","min","max","type","range","Component","a0eM","__webpack_exports__","shorten","arr","sLen","newArr","len","push","substr","getDaySuffix","d","s","v","pad","val","newVal","String","toDate","dirtyDate","getTime","toString","NaN","amount","Number","setDate","getDate","desiredMonth","getMonth","dateWithDesiredMonth","setFullYear","getFullYear","daysInMonth","getDayNumberOfMouth","setMonth","Math","addYears","endOfWeek","day","getDay","diff","endOfMonth","month","startOfDay","startOfMonth","startOfWeek","isDate","undefined","isNaN","Array","isArray","isSameDay","dirtyDateLeft","dirtyDateRight","dateLeftStartOfDay","dateRightStartOfDay","isSameWeek","dateLeftStartOfWeek","dateRightStartOfWeek","isSameMonth","dateLeft","dateRight","isSameYear","compareAsc","year","monthIndex","lastDayOfMonth","getWeekNumberOfYear","week1","round","prevMonth","nextMonth","prevYear","nextYear","getDaysOfMonth","end","current","getHours","setMinutes","getMinutes","setSeconds","getSeconds","days","formatDate","fmt","literals","replace","literal","$0","$1","token","formatFlags","slice","shift","parseDate","dirtyDateString","dirtyFormatString","dateInfo","isValid","parseFlags","info_1","index_1","search","result","today","isPm","hour","timezoneOffset","minute","UTC","second","millisecond","weekdayValues","monthValues","allPlaceholders","allFormats","twoDigits","threeDigits","fourDigits","word","amPm","weekdays","months","short","long","time","week","datetime","D","DD","Do","dd","M","MM","yy","yyyy","h","hh","H","HH","m","mm","ss","S","getMilliseconds","SS","SSS","a","A","toUpperCase","WW","Wo","ZZ","o","getTimezoneOffset","floor","abs","da","cent","ddd","toLowerCase","parts","match","minutes","parseInt"],"mappings":"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","file":"js/28.2012f80.js","sourcesContent":["webpackJsonp([28],{\n\n/***/ \"KjkI\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {code: \"import { Calendar } from 'dashkit-ui';\\nimport { addDays, addMonths } from 'dashkit-ui/Calendar/utils';\\n\\nfunction onChange(value) {\\n  console.log(`value: ${value}`);\\n}\\n\\nfunction getMaxDate() {\\n  const date = new Date();\\n  date.setHours(23, 59, 59, 999);\\n  return addDays(date, 1);\\n}\\n\\nfunction getMinDate() {\\n  const date = new Date();\\n  return addMonths(date, -6);\\n}\\n\\nclass Demo extends React.Component {\\n  render() {\\n    return (\\n      <Calendar onChange={onChange} min={getMinDate()} max={getMaxDate()} type=\\\"datetime\\\" range />\\n    );\\n  }\\n}\\n\\nReactDOM.render(\\n  <Demo />,\\n  mountNode\\n);\\n\",meta: {\"order\":2,\"title\":{\"zh-CN\":\"时间限制\",\"en-US\":\"Minimum / Maximum\"},\"subtitle\":{\"zh-CN\":\"<p>使用<code>min</code>和<code>max</code>能实现时间的控制。</p>\\n\",\"en-US\":\"<p>The <code>min</code> and <code>max</code> properties can help you to limit the time.</p>\\n\"},\"__content\":\"\"},preview: function previewer() {\n  var React = __webpack_require__(\"GiK3\");\n\n  var ReactDOM = __webpack_require__(\"O27J\");\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _dashkitUi = __webpack_require__(\"qMEF\");\n\n  var _utils = __webpack_require__(\"a0eM\");\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n  function onChange(value) {\n    console.log(\"value: \" + value);\n  }\n\n  function getMaxDate() {\n    var date = new Date();\n    date.setHours(23, 59, 59, 999);\n    return (0, _utils.addDays)(date, 1);\n  }\n\n  function getMinDate() {\n    var date = new Date();\n    return (0, _utils.addMonths)(date, -6);\n  }\n\n  var Demo = function (_React$Component) {\n    _inherits(Demo, _React$Component);\n\n    function Demo() {\n      _classCallCheck(this, Demo);\n\n      return _possibleConstructorReturn(this, (Demo.__proto__ || Object.getPrototypeOf(Demo)).apply(this, arguments));\n    }\n\n    _createClass(Demo, [{\n      key: \"render\",\n      value: function render() {\n        return React.createElement(_dashkitUi.Calendar, {\n          onChange: onChange,\n          min: getMinDate(),\n          max: getMaxDate(),\n          type: \"datetime\",\n          range: true\n        });\n      }\n    }]);\n\n    return Demo;\n  }(React.Component);\n\n  return React.createElement(Demo, null);\n},}\n\n/***/ }),\n\n/***/ \"a0eM\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"weekdayValues\", function() { return weekdayValues; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"monthValues\", function() { return monthValues; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"allPlaceholders\", function() { return allPlaceholders; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"allFormats\", function() { return allFormats; });\n/* harmony export (immutable) */ __webpack_exports__[\"shorten\"] = shorten;\n/* harmony export (immutable) */ __webpack_exports__[\"getDaySuffix\"] = getDaySuffix;\n/* harmony export (immutable) */ __webpack_exports__[\"pad\"] = pad;\n/* harmony export (immutable) */ __webpack_exports__[\"toDate\"] = toDate;\n/* harmony export (immutable) */ __webpack_exports__[\"addDays\"] = addDays;\n/* harmony export (immutable) */ __webpack_exports__[\"addMonths\"] = addMonths;\n/* harmony export (immutable) */ __webpack_exports__[\"addYears\"] = addYears;\n/* harmony export (immutable) */ __webpack_exports__[\"endOfWeek\"] = endOfWeek;\n/* harmony export (immutable) */ __webpack_exports__[\"endOfMonth\"] = endOfMonth;\n/* harmony export (immutable) */ __webpack_exports__[\"startOfDay\"] = startOfDay;\n/* harmony export (immutable) */ __webpack_exports__[\"startOfMonth\"] = startOfMonth;\n/* harmony export (immutable) */ __webpack_exports__[\"startOfWeek\"] = startOfWeek;\n/* harmony export (immutable) */ __webpack_exports__[\"isDate\"] = isDate;\n/* harmony export (immutable) */ __webpack_exports__[\"isSameDay\"] = isSameDay;\n/* harmony export (immutable) */ __webpack_exports__[\"isSameWeek\"] = isSameWeek;\n/* harmony export (immutable) */ __webpack_exports__[\"isSameMonth\"] = isSameMonth;\n/* harmony export (immutable) */ __webpack_exports__[\"isSameYear\"] = isSameYear;\n/* harmony export (immutable) */ __webpack_exports__[\"compareAsc\"] = compareAsc;\n/* harmony export (immutable) */ __webpack_exports__[\"getDayNumberOfMouth\"] = getDayNumberOfMouth;\n/* harmony export (immutable) */ __webpack_exports__[\"getWeekNumberOfYear\"] = getWeekNumberOfYear;\n/* harmony export (immutable) */ __webpack_exports__[\"prevMonth\"] = prevMonth;\n/* harmony export (immutable) */ __webpack_exports__[\"nextMonth\"] = nextMonth;\n/* harmony export (immutable) */ __webpack_exports__[\"prevYear\"] = prevYear;\n/* harmony export (immutable) */ __webpack_exports__[\"nextYear\"] = nextYear;\n/* harmony export (immutable) */ __webpack_exports__[\"getDaysOfMonth\"] = getDaysOfMonth;\n/* harmony export (immutable) */ __webpack_exports__[\"formatDate\"] = formatDate;\n/* harmony export (immutable) */ __webpack_exports__[\"parseDate\"] = parseDate;\nvar token = /d{1,4}|M{1,4}|yy(?:yy)?|S{1,3}|Do|ZZ|WW|Wo|([HhMsDm])\\1?|[aA]|\"[^\"]*\"|'[^']*'/g;\nvar twoDigits = /\\d\\d?/;\nvar threeDigits = /\\d{3}/;\nvar fourDigits = /\\d{4}/;\nvar word = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\nvar literal = /\\[([^]*?)\\]/gm;\nvar amPm = ['am', 'pm'];\nvar weekdays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\nvar months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n];\nvar weekdayValues = {\n    short: shorten(weekdays, 3),\n    long: weekdays,\n};\nvar monthValues = {\n    short: shorten(months, 3),\n    long: months,\n};\nvar allPlaceholders = {\n    day: 'Select date',\n    time: 'Select time',\n    week: 'Select week',\n    month: 'Select month',\n    year: 'Select year',\n    datetime: 'Select Datetime',\n    range: {\n        day: ['Start day', 'End day'],\n        time: ['Start time', 'End time'],\n        week: ['Start week', 'End week'],\n        month: ['Start month', 'End month'],\n        year: ['Start year', 'End year'],\n        datetime: ['Start time', 'End time'],\n    },\n};\nvar allFormats = {\n    day: 'yyyy-MM-dd',\n    time: 'HH:mm:ss',\n    week: 'yyyy WW',\n    month: 'yyyy-MM',\n    year: 'yyyy',\n    datetime: 'yyyy-MM-dd HH:mm:ss',\n};\nfunction shorten(arr, sLen) {\n    var newArr = [];\n    for (var i = 0, len = arr.length; i < len; i++) {\n        newArr.push(arr[i].substr(0, sLen));\n    }\n    return newArr;\n}\nfunction getDaySuffix(d) {\n    var s = ['th', 'st', 'nd', 'rd'];\n    var v = d % 100;\n    return d + (s[(v - 20) % 10] || s[v] || s[0]);\n}\nfunction pad(val, len) {\n    if (len === void 0) { len = 2; }\n    var newVal = String(val);\n    while (newVal.length < len) {\n        newVal = '0' + val;\n    }\n    return newVal;\n}\nfunction toDate(dirtyDate) {\n    if (arguments.length < 1) {\n        throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n    }\n    if (dirtyDate instanceof Date) {\n        return new Date(dirtyDate.getTime());\n    }\n    else if (typeof dirtyDate === 'number' ||\n        Object.prototype.toString.call(dirtyDate) === '[object Number]') {\n        return new Date(dirtyDate);\n    }\n    else if (typeof dirtyDate === 'string' ||\n        Object.prototype.toString.call(dirtyDate) === '[object String]') {\n        return new Date(dirtyDate);\n    }\n    return new Date(NaN);\n}\nfunction addDays(dirtyDate, amount) {\n    amount = Number(amount);\n    var date = toDate(dirtyDate);\n    date.setDate(date.getDate() + amount);\n    return date;\n}\nfunction addMonths(dirtyDate, amount) {\n    amount = Number(amount);\n    var date = toDate(dirtyDate);\n    var desiredMonth = date.getMonth() + amount;\n    var dateWithDesiredMonth = new Date(0);\n    dateWithDesiredMonth.setFullYear(date.getFullYear(), desiredMonth, 1);\n    dateWithDesiredMonth.setHours(0, 0, 0, 0);\n    var daysInMonth = getDayNumberOfMouth(dateWithDesiredMonth);\n    date.setMonth(desiredMonth, Math.min(daysInMonth, date.getDate()));\n    return date;\n}\nfunction addYears(dirtyDate, amount) {\n    amount = Number(amount);\n    return addMonths(dirtyDate, amount * 12);\n}\nfunction endOfWeek(dirtyDate) {\n    var date = toDate(dirtyDate);\n    var day = date.getDay();\n    var diff = 6 - day;\n    date.setDate(date.getDate() + diff);\n    date.setHours(23, 59, 59, 999);\n    return date;\n}\nfunction endOfMonth(dirtyDate) {\n    var date = toDate(dirtyDate);\n    var month = date.getMonth();\n    date.setFullYear(date.getFullYear(), month + 1, 0);\n    date.setHours(23, 59, 59, 999);\n    return date;\n}\nfunction startOfDay(dirtyDate) {\n    var date = toDate(dirtyDate);\n    date.setHours(0, 0, 0, 0);\n    return date;\n}\nfunction startOfMonth(dirtyDate) {\n    var date = toDate(dirtyDate);\n    date.setDate(1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n}\nfunction startOfWeek(dirtyDate) {\n    var date = toDate(dirtyDate);\n    var day = date.getDay();\n    var diff = day;\n    date.setDate(date.getDate() - diff);\n    date.setHours(0, 0, 0, 0);\n    return date;\n}\nfunction isDate(dirtyDate) {\n    if (dirtyDate === null || dirtyDate === undefined) {\n        return false;\n    }\n    if (isNaN(new Date(dirtyDate).getTime())) {\n        return false;\n    }\n    if (Array.isArray(dirtyDate)) {\n        return false;\n    }\n    return true;\n}\nfunction isSameDay(dirtyDateLeft, dirtyDateRight) {\n    if (arguments.length < 2) {\n        throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n    }\n    var dateLeftStartOfDay = startOfDay(dirtyDateLeft);\n    var dateRightStartOfDay = startOfDay(dirtyDateRight);\n    return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();\n}\nfunction isSameWeek(dirtyDateLeft, dirtyDateRight) {\n    if (arguments.length < 2) {\n        throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n    }\n    var dateLeftStartOfWeek = startOfWeek(dirtyDateLeft);\n    var dateRightStartOfWeek = startOfWeek(dirtyDateRight);\n    return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();\n}\nfunction isSameMonth(dirtyDateLeft, dirtyDateRight) {\n    if (arguments.length < 2) {\n        throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n    }\n    var dateLeft = toDate(dirtyDateLeft);\n    var dateRight = toDate(dirtyDateRight);\n    return (dateLeft.getFullYear() === dateRight.getFullYear() &&\n        dateLeft.getMonth() === dateRight.getMonth());\n}\nfunction isSameYear(dirtyDateLeft, dirtyDateRight) {\n    if (arguments.length < 2) {\n        throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n    }\n    var dateLeft = toDate(dirtyDateLeft);\n    var dateRight = toDate(dirtyDateRight);\n    return dateLeft.getFullYear() === dateRight.getFullYear();\n}\nfunction compareAsc(dirtyDateLeft, dirtyDateRight) {\n    if (arguments.length < 2) {\n        throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n    }\n    var dateLeft = toDate(dirtyDateLeft);\n    var dateRight = toDate(dirtyDateRight);\n    var diff = dateLeft.getTime() - dateRight.getTime();\n    if (diff < 0) {\n        return -1;\n    }\n    else if (diff > 0) {\n        return 1;\n    }\n    else {\n        return diff;\n    }\n}\nfunction getDayNumberOfMouth(dirtyDate) {\n    var date = toDate(dirtyDate);\n    var year = date.getFullYear();\n    var monthIndex = date.getMonth();\n    var lastDayOfMonth = new Date(0);\n    lastDayOfMonth.setFullYear(year, monthIndex + 1, 0);\n    lastDayOfMonth.setHours(0, 0, 0, 0);\n    return lastDayOfMonth.getDate();\n}\nfunction getWeekNumberOfYear(dirtyDate) {\n    var date = toDate(dirtyDate);\n    date.setHours(0, 0, 0, 0);\n    date.setDate(date.getDate() + 3 - ((date.getDay() + 6) % 7));\n    var week1 = new Date(date.getFullYear(), 0, 4);\n    return (1 +\n        Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + ((week1.getDay() + 6) % 7)) / 7));\n}\nfunction prevMonth(dirtyDate) {\n    return addMonths(dirtyDate, -1);\n}\nfunction nextMonth(dirtyDate) {\n    return addMonths(dirtyDate, 1);\n}\nfunction prevYear(dirtyDate) {\n    return addMonths(dirtyDate, -12);\n}\nfunction nextYear(dirtyDate) {\n    return addMonths(dirtyDate, 12);\n}\nfunction getDaysOfMonth(dirtyDate) {\n    var date = toDate(dirtyDate);\n    var end = endOfWeek(endOfMonth(date));\n    var current = startOfWeek(startOfMonth(date));\n    current.setHours(date.getHours());\n    current.setMinutes(date.getMinutes());\n    current.setSeconds(date.getSeconds());\n    var days = [];\n    while (current.getTime() < end.getTime()) {\n        days.push(current);\n        current = addDays(current, 1);\n    }\n    return days;\n}\nvar formatFlags = {\n    D: function (date) {\n        return date.getDay();\n    },\n    DD: function (date) {\n        return pad(date.getDay());\n    },\n    Do: function (date) {\n        return getDaySuffix(date.getDate());\n    },\n    d: function (date) {\n        return date.getDate();\n    },\n    dd: function (date) {\n        return pad(date.getDate());\n    },\n    M: function (date) {\n        return date.getMonth() + 1;\n    },\n    MM: function (date) {\n        return pad(date.getMonth() + 1);\n    },\n    yy: function (date) {\n        return String(date.getFullYear()).substr(2);\n    },\n    yyyy: function (date) {\n        return date.getFullYear();\n    },\n    h: function (date) {\n        return date.getHours() % 12 || 12;\n    },\n    hh: function (date) {\n        return pad(date.getHours() % 12 || 12);\n    },\n    H: function (date) {\n        return date.getHours();\n    },\n    HH: function (date) {\n        return pad(date.getHours());\n    },\n    m: function (date) {\n        return date.getMinutes();\n    },\n    mm: function (date) {\n        return pad(date.getMinutes());\n    },\n    s: function (date) {\n        return date.getSeconds();\n    },\n    ss: function (date) {\n        return pad(date.getSeconds());\n    },\n    S: function (date) {\n        return Math.round(date.getMilliseconds() / 100);\n    },\n    SS: function (date) {\n        return pad(Math.round(date.getMilliseconds() / 10), 2);\n    },\n    SSS: function (date) {\n        return pad(date.getMilliseconds(), 3);\n    },\n    a: function (date) {\n        return date.getHours() < 12 ? amPm[0] : amPm[1];\n    },\n    A: function (date) {\n        return date.getHours() < 12 ? amPm[0].toUpperCase() : amPm[1].toUpperCase();\n    },\n    WW: function (date) {\n        return pad(getWeekNumberOfYear(date));\n    },\n    Wo: function (date) {\n        return getDaySuffix(getWeekNumberOfYear(date));\n    },\n    ZZ: function (date) {\n        var o = date.getTimezoneOffset();\n        return (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + (Math.abs(o) % 60), 4);\n    },\n};\nvar parseFlags = {\n    d: [\n        twoDigits,\n        function (d, v) {\n            d.day = v;\n        },\n    ],\n    M: [\n        twoDigits,\n        function (d, v) {\n            d.month = v - 1;\n        },\n    ],\n    h: [\n        twoDigits,\n        function (d, v) {\n            d.hour = v;\n        },\n    ],\n    m: [\n        twoDigits,\n        function (d, v) {\n            d.minute = v;\n        },\n    ],\n    s: [\n        twoDigits,\n        function (d, v) {\n            d.second = v;\n        },\n    ],\n    yy: [\n        twoDigits,\n        function (d, v) {\n            var da = new Date();\n            var cent = +('' + da.getFullYear()).substr(0, 2);\n            d.year = '' + (v > 68 ? cent - 1 : cent) + v;\n        },\n    ],\n    yyyy: [\n        fourDigits,\n        function (d, v) {\n            d.year = v;\n        },\n    ],\n    S: [\n        /\\d/,\n        function (d, v) {\n            d.millisecond = v * 100;\n        },\n    ],\n    SS: [\n        /\\d{2}/,\n        function (d, v) {\n            d.millisecond = v * 10;\n        },\n    ],\n    SSS: [\n        threeDigits,\n        function (d, v) {\n            d.millisecond = v;\n        },\n    ],\n    D: [twoDigits],\n    ddd: [word],\n    a: [\n        word,\n        function (d, v) {\n            var val = v.toLowerCase();\n            if (val === amPm[0]) {\n                d.isPm = false;\n            }\n            else if (val === amPm[1]) {\n                d.isPm = true;\n            }\n        },\n    ],\n    ZZ: [\n        /[\\+\\-]\\d\\d:?\\d\\d/,\n        function (d, v) {\n            var parts = (v + '').match(/([\\+\\-]|\\d\\d)/gi);\n            if (parts && parts[1]) {\n                var minutes = +(parts[1] * 60) + parseInt(parts[2], 10);\n                d.timezoneOffset = parts[0] === '+' ? minutes : -minutes;\n            }\n        },\n    ],\n};\nparseFlags.DD = parseFlags.D;\nparseFlags.Do = parseFlags.dd = parseFlags.d;\nparseFlags.mm = parseFlags.m;\nparseFlags.hh = parseFlags.H = parseFlags.HH = parseFlags.h;\nparseFlags.MM = parseFlags.M;\nparseFlags.ss = parseFlags.s;\nparseFlags.A = parseFlags.a;\nfunction formatDate(dirtyDate, fmt) {\n    if (arguments.length < 2) {\n        throw new TypeError('2 argument required, but only ' + arguments.length + ' present');\n    }\n    var date = toDate(dirtyDate);\n    var literals = [];\n    fmt = fmt.replace(literal, function ($0, $1) {\n        literals.push($1);\n        return '??';\n    });\n    fmt = fmt.replace(token, function ($0) {\n        return $0 in formatFlags ? formatFlags[$0](date) : $0.slice(1, $0.length - 1);\n    });\n    return fmt.replace(/\\?\\?/g, function () {\n        return literals.shift();\n    });\n}\nfunction parseDate(dirtyDateString, dirtyFormatString) {\n    if (arguments.length < 2) {\n        throw new TypeError('2 argument required, but only ' + arguments.length + ' present');\n    }\n    dirtyDateString = String(dirtyDateString);\n    dirtyFormatString = String(dirtyFormatString);\n    var dateInfo = {};\n    var isValid = true;\n    dirtyFormatString.replace(token, function ($0) {\n        if (parseFlags[$0]) {\n            var info_1 = parseFlags[$0];\n            var index_1 = dirtyDateString.search(info_1[0]);\n            if (!~index_1) {\n                isValid = false;\n            }\n            else {\n                dirtyDateString.replace(info_1[0], function (result) {\n                    if (typeof info_1[1] === 'function') {\n                        info_1[1](dateInfo, result);\n                    }\n                    dirtyDateString = dirtyDateString.substr(index_1 + result.length);\n                    return result;\n                });\n            }\n        }\n        return parseFlags[$0] ? '' : $0.slice(1, $0.length - 1);\n    });\n    if (!isValid) {\n        return toDate(dirtyFormatString);\n    }\n    var today = new Date();\n    if (dateInfo.isPm === true && dateInfo.hour != null && +dateInfo.hour !== 12) {\n        dateInfo.hour = +dateInfo.hour + 12;\n    }\n    else if (dateInfo.isPm === false && +dateInfo.hour === 12) {\n        dateInfo.hour = 0;\n    }\n    var date;\n    if (dateInfo.timezoneOffset != null) {\n        dateInfo.minute = +(dateInfo.minute || 0) - +dateInfo.timezoneOffset;\n        date = new Date(Date.UTC(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1, dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0));\n    }\n    else {\n        date = new Date(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1, dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0);\n    }\n    return date;\n}\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// js/28.2012f80.js","module.exports = {code: \"import { Calendar } from 'dashkit-ui';\\nimport { addDays, addMonths } from 'dashkit-ui/Calendar/utils';\\n\\nfunction onChange(value) {\\n  console.log(`value: ${value}`);\\n}\\n\\nfunction getMaxDate() {\\n  const date = new Date();\\n  date.setHours(23, 59, 59, 999);\\n  return addDays(date, 1);\\n}\\n\\nfunction getMinDate() {\\n  const date = new Date();\\n  return addMonths(date, -6);\\n}\\n\\nclass Demo extends React.Component {\\n  render() {\\n    return (\\n      <Calendar onChange={onChange} min={getMinDate()} max={getMaxDate()} type=\\\"datetime\\\" range />\\n    );\\n  }\\n}\\n\\nReactDOM.render(\\n  <Demo />,\\n  mountNode\\n);\\n\",meta: {\"order\":2,\"title\":{\"zh-CN\":\"时间限制\",\"en-US\":\"Minimum / Maximum\"},\"subtitle\":{\"zh-CN\":\"<p>使用<code>min</code>和<code>max</code>能实现时间的控制。</p>\\n\",\"en-US\":\"<p>The <code>min</code> and <code>max</code> properties can help you to limit the time.</p>\\n\"},\"__content\":\"\"},preview: function previewer() {\n  var React = require(\"react\");\n\n  var ReactDOM = require(\"react-dom\");\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _dashkitUi = require(\"dashkit-ui\");\n\n  var _utils = require(\"dashkit-ui/Calendar/utils\");\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n  function onChange(value) {\n    console.log(\"value: \" + value);\n  }\n\n  function getMaxDate() {\n    var date = new Date();\n    date.setHours(23, 59, 59, 999);\n    return (0, _utils.addDays)(date, 1);\n  }\n\n  function getMinDate() {\n    var date = new Date();\n    return (0, _utils.addMonths)(date, -6);\n  }\n\n  var Demo = function (_React$Component) {\n    _inherits(Demo, _React$Component);\n\n    function Demo() {\n      _classCallCheck(this, Demo);\n\n      return _possibleConstructorReturn(this, (Demo.__proto__ || Object.getPrototypeOf(Demo)).apply(this, arguments));\n    }\n\n    _createClass(Demo, [{\n      key: \"render\",\n      value: function render() {\n        return React.createElement(_dashkitUi.Calendar, {\n          onChange: onChange,\n          min: getMinDate(),\n          max: getMaxDate(),\n          type: \"datetime\",\n          range: true\n        });\n      }\n    }]);\n\n    return Demo;\n  }(React.Component);\n\n  return React.createElement(Demo, null);\n},}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/calendar/min-max.md\n// module id = KjkI\n// module chunks = 9 28","import { DateProps } from './typings';\n\nconst token = /d{1,4}|M{1,4}|yy(?:yy)?|S{1,3}|Do|ZZ|WW|Wo|([HhMsDm])\\1?|[aA]|\"[^\"]*\"|'[^']*'/g;\nconst twoDigits = /\\d\\d?/;\nconst threeDigits = /\\d{3}/;\nconst fourDigits = /\\d{4}/;\n// tslint:disable-next-line\nconst word = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\nconst literal = /\\[([^]*?)\\]/gm;\nconst amPm = ['am', 'pm'];\nconst weekdays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\nconst months = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\nexport const weekdayValues = {\n  short: shorten(weekdays, 3),\n  long: weekdays,\n};\n\nexport const monthValues = {\n  short: shorten(months, 3),\n  long: months,\n};\n\nexport const allPlaceholders: { [key: string]: any } = {\n  day: 'Select date',\n  time: 'Select time',\n  week: 'Select week',\n  month: 'Select month',\n  year: 'Select year',\n  datetime: 'Select Datetime',\n  range: {\n    day: ['Start day', 'End day'],\n    time: ['Start time', 'End time'],\n    week: ['Start week', 'End week'],\n    month: ['Start month', 'End month'],\n    year: ['Start year', 'End year'],\n    datetime: ['Start time', 'End time'],\n  },\n};\nexport const allFormats = {\n  day: 'yyyy-MM-dd',\n  time: 'HH:mm:ss',\n  week: 'yyyy WW',\n  month: 'yyyy-MM',\n  year: 'yyyy',\n  datetime: 'yyyy-MM-dd HH:mm:ss',\n};\n\nexport function shorten(arr: string[], sLen: number) {\n  const newArr = [];\n  for (let i = 0, len = arr.length; i < len; i++) {\n    newArr.push(arr[i].substr(0, sLen));\n  }\n  return newArr;\n}\n\nexport function getDaySuffix(d: number) {\n  const s = ['th', 'st', 'nd', 'rd'];\n  const v = d % 100;\n  return d + (s[(v - 20) % 10] || s[v] || s[0]);\n}\n\nexport function pad(val: number, len = 2) {\n  let newVal = String(val);\n  while (newVal.length < len) {\n    newVal = '0' + val;\n  }\n  return newVal;\n}\n\nexport function toDate(dirtyDate?: DateProps) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  if (dirtyDate instanceof Date) {\n    return new Date(dirtyDate.getTime());\n  } else if (\n    typeof dirtyDate === 'number' ||\n    Object.prototype.toString.call(dirtyDate) === '[object Number]'\n  ) {\n    return new Date(dirtyDate);\n  } else if (\n    typeof dirtyDate === 'string' ||\n    Object.prototype.toString.call(dirtyDate) === '[object String]'\n  ) {\n    return new Date(dirtyDate);\n  }\n\n  return new Date(NaN);\n}\n\nexport function addDays(dirtyDate: DateProps, amount: number) {\n  amount = Number(amount);\n  const date = toDate(dirtyDate);\n  date.setDate(date.getDate() + amount);\n  return date;\n}\n\nexport function addMonths(dirtyDate: DateProps, amount: number) {\n  amount = Number(amount);\n  const date = toDate(dirtyDate);\n  const desiredMonth = date.getMonth() + amount;\n  const dateWithDesiredMonth = new Date(0);\n  dateWithDesiredMonth.setFullYear(date.getFullYear(), desiredMonth, 1);\n  dateWithDesiredMonth.setHours(0, 0, 0, 0);\n  const daysInMonth = getDayNumberOfMouth(dateWithDesiredMonth);\n  date.setMonth(desiredMonth, Math.min(daysInMonth, date.getDate()));\n  return date;\n}\n\nexport function addYears(dirtyDate: DateProps, amount: number) {\n  amount = Number(amount);\n  return addMonths(dirtyDate, amount * 12);\n}\n\nexport function endOfWeek(dirtyDate: DateProps) {\n  const date = toDate(dirtyDate);\n  const day = date.getDay();\n  const diff = 6 - day;\n\n  date.setDate(date.getDate() + diff);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}\n\nexport function endOfMonth(dirtyDate: DateProps) {\n  const date = toDate(dirtyDate);\n  const month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}\n\nexport function startOfDay(dirtyDate: DateProps) {\n  const date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}\n\nexport function startOfMonth(dirtyDate: DateProps) {\n  const date = toDate(dirtyDate);\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}\n\nexport function startOfWeek(dirtyDate: DateProps) {\n  const date = toDate(dirtyDate);\n  const day = date.getDay();\n  const diff = day;\n\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}\n\nexport function isDate(dirtyDate?: DateProps) {\n  if (dirtyDate === null || dirtyDate === undefined) {\n    return false;\n  }\n  if (isNaN(new Date(dirtyDate).getTime())) {\n    return false;\n  }\n  if (Array.isArray(dirtyDate)) {\n    // deal with `new Date([ new Date() ]) -> new Date()`\n    return false;\n  }\n  return true;\n}\n\nexport function isSameDay(dirtyDateLeft: DateProps, dirtyDateRight: DateProps) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  const dateLeftStartOfDay = startOfDay(dirtyDateLeft);\n  const dateRightStartOfDay = startOfDay(dirtyDateRight);\n\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();\n}\n\nexport function isSameWeek(dirtyDateLeft: DateProps, dirtyDateRight: DateProps) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  const dateLeftStartOfWeek = startOfWeek(dirtyDateLeft);\n  const dateRightStartOfWeek = startOfWeek(dirtyDateRight);\n\n  return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();\n}\n\nexport function isSameMonth(dirtyDateLeft: DateProps, dirtyDateRight: DateProps) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  const dateLeft = toDate(dirtyDateLeft);\n  const dateRight = toDate(dirtyDateRight);\n  return (\n    dateLeft.getFullYear() === dateRight.getFullYear() &&\n    dateLeft.getMonth() === dateRight.getMonth()\n  );\n}\n\nexport function isSameYear(dirtyDateLeft: DateProps, dirtyDateRight: DateProps) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  const dateLeft = toDate(dirtyDateLeft);\n  const dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() === dateRight.getFullYear();\n}\n\nexport function compareAsc(dirtyDateLeft: DateProps, dirtyDateRight: DateProps) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  const dateLeft = toDate(dirtyDateLeft);\n  const dateRight = toDate(dirtyDateRight);\n\n  const diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1;\n  } else {\n    return diff;\n  }\n}\n\nexport function getDayNumberOfMouth(dirtyDate: DateProps) {\n  const date = toDate(dirtyDate);\n  const year = date.getFullYear();\n  const monthIndex = date.getMonth();\n  const lastDayOfMonth = new Date(0);\n  lastDayOfMonth.setFullYear(year, monthIndex + 1, 0);\n  lastDayOfMonth.setHours(0, 0, 0, 0);\n  return lastDayOfMonth.getDate();\n}\n\nexport function getWeekNumberOfYear(dirtyDate: DateProps) {\n  const date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  date.setDate(date.getDate() + 3 - ((date.getDay() + 6) % 7));\n  const week1 = new Date(date.getFullYear(), 0, 4);\n  return (\n    1 +\n    Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + ((week1.getDay() + 6) % 7)) / 7)\n  );\n}\n\nexport function prevMonth(dirtyDate: DateProps) {\n  return addMonths(dirtyDate, -1);\n}\n\nexport function nextMonth(dirtyDate: DateProps) {\n  return addMonths(dirtyDate, 1);\n}\n\nexport function prevYear(dirtyDate: DateProps) {\n  return addMonths(dirtyDate, -12);\n}\n\nexport function nextYear(dirtyDate: DateProps) {\n  return addMonths(dirtyDate, 12);\n}\n\nexport function getDaysOfMonth(dirtyDate: DateProps) {\n  const date = toDate(dirtyDate);\n  const end = endOfWeek(endOfMonth(date));\n  let current = startOfWeek(startOfMonth(date));\n  current.setHours(date.getHours());\n  current.setMinutes(date.getMinutes());\n  current.setSeconds(date.getSeconds());\n\n  const days = [];\n\n  while (current.getTime() < end.getTime()) {\n    days.push(current);\n    current = addDays(current, 1);\n  }\n\n  return days;\n}\n\nconst formatFlags: any = {\n  D(date: Date) {\n    return date.getDay();\n  },\n  DD(date: Date) {\n    return pad(date.getDay());\n  },\n  Do(date: Date) {\n    return getDaySuffix(date.getDate());\n  },\n  d(date: Date) {\n    return date.getDate();\n  },\n  dd(date: Date) {\n    return pad(date.getDate());\n  },\n  M(date: Date) {\n    return date.getMonth() + 1;\n  },\n  MM(date: Date) {\n    return pad(date.getMonth() + 1);\n  },\n  yy(date: Date) {\n    return String(date.getFullYear()).substr(2);\n  },\n  yyyy(date: Date) {\n    return date.getFullYear();\n  },\n  h(date: Date) {\n    return date.getHours() % 12 || 12;\n  },\n  hh(date: Date) {\n    return pad(date.getHours() % 12 || 12);\n  },\n  H(date: Date) {\n    return date.getHours();\n  },\n  HH(date: Date) {\n    return pad(date.getHours());\n  },\n  m(date: Date) {\n    return date.getMinutes();\n  },\n  mm(date: Date) {\n    return pad(date.getMinutes());\n  },\n  s(date: Date) {\n    return date.getSeconds();\n  },\n  ss(date: Date) {\n    return pad(date.getSeconds());\n  },\n  S(date: Date) {\n    return Math.round(date.getMilliseconds() / 100);\n  },\n  SS(date: Date) {\n    return pad(Math.round(date.getMilliseconds() / 10), 2);\n  },\n  SSS(date: Date) {\n    return pad(date.getMilliseconds(), 3);\n  },\n  a(date: Date) {\n    return date.getHours() < 12 ? amPm[0] : amPm[1];\n  },\n  A(date: Date) {\n    return date.getHours() < 12 ? amPm[0].toUpperCase() : amPm[1].toUpperCase();\n  },\n  WW(date: Date) {\n    return pad(getWeekNumberOfYear(date));\n  },\n  Wo(date: Date) {\n    return getDaySuffix(getWeekNumberOfYear(date));\n  },\n  ZZ(date: Date) {\n    const o = date.getTimezoneOffset();\n    return (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + (Math.abs(o) % 60), 4);\n  },\n};\n\ntype ParseDataType = { [key: string]: any };\nconst parseFlags: any = {\n  d: [\n    twoDigits,\n    function(d: ParseDataType, v: number) {\n      d.day = v;\n    },\n  ],\n  M: [\n    twoDigits,\n    function(d: ParseDataType, v: number) {\n      d.month = v - 1;\n    },\n  ],\n  h: [\n    twoDigits,\n    function(d: ParseDataType, v: number) {\n      d.hour = v;\n    },\n  ],\n  m: [\n    twoDigits,\n    function(d: ParseDataType, v: number) {\n      d.minute = v;\n    },\n  ],\n  s: [\n    twoDigits,\n    function(d: ParseDataType, v: number) {\n      d.second = v;\n    },\n  ],\n  yy: [\n    twoDigits,\n    function(d: ParseDataType, v: number) {\n      const da = new Date();\n      const cent = +('' + da.getFullYear()).substr(0, 2);\n      d.year = '' + (v > 68 ? cent - 1 : cent) + v;\n    },\n  ],\n  yyyy: [\n    fourDigits,\n    function(d: ParseDataType, v: number) {\n      d.year = v;\n    },\n  ],\n  S: [\n    /\\d/,\n    function(d: ParseDataType, v: number) {\n      d.millisecond = v * 100;\n    },\n  ],\n  SS: [\n    /\\d{2}/,\n    function(d: ParseDataType, v: number) {\n      d.millisecond = v * 10;\n    },\n  ],\n  SSS: [\n    threeDigits,\n    function(d: ParseDataType, v: number) {\n      d.millisecond = v;\n    },\n  ],\n  D: [twoDigits],\n  ddd: [word],\n  a: [\n    word,\n    function(d: ParseDataType, v: string) {\n      const val = v.toLowerCase();\n      if (val === amPm[0]) {\n        d.isPm = false;\n      } else if (val === amPm[1]) {\n        d.isPm = true;\n      }\n    },\n  ],\n  ZZ: [\n    /[\\+\\-]\\d\\d:?\\d\\d/,\n    function(d: ParseDataType, v: number) {\n      const parts: any = (v + '').match(/([\\+\\-]|\\d\\d)/gi);\n\n      if (parts && parts[1]) {\n        const minutes = +(parts[1] * 60) + parseInt(parts[2], 10);\n        d.timezoneOffset = parts[0] === '+' ? minutes : -minutes;\n      }\n    },\n  ],\n};\nparseFlags.DD = parseFlags.D;\nparseFlags.Do = parseFlags.dd = parseFlags.d;\nparseFlags.mm = parseFlags.m;\nparseFlags.hh = parseFlags.H = parseFlags.HH = parseFlags.h;\nparseFlags.MM = parseFlags.M;\nparseFlags.ss = parseFlags.s;\nparseFlags.A = parseFlags.a;\n\nexport function formatDate(dirtyDate: DateProps, fmt: string) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 argument required, but only ' + arguments.length + ' present');\n  }\n  const date = toDate(dirtyDate);\n  const literals: any = [];\n\n  fmt = fmt.replace(literal, function($0, $1) {\n    literals.push($1);\n    return '??';\n  });\n  fmt = fmt.replace(token, function($0) {\n    return $0 in formatFlags ? formatFlags[$0](date) : $0.slice(1, $0.length - 1);\n  });\n  return fmt.replace(/\\?\\?/g, function() {\n    return literals.shift();\n  });\n}\n\nexport function parseDate(dirtyDateString: string, dirtyFormatString: string) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 argument required, but only ' + arguments.length + ' present');\n  }\n\n  dirtyDateString = String(dirtyDateString);\n  dirtyFormatString = String(dirtyFormatString);\n\n  const dateInfo: ParseDataType = {};\n  let isValid = true;\n\n  dirtyFormatString.replace(token, function($0) {\n    if (parseFlags[$0]) {\n      const info = parseFlags[$0];\n      const index = dirtyDateString.search(info[0]);\n      // tslint:disable-next-line\n      if (!~index) {\n        isValid = false;\n      } else {\n        dirtyDateString.replace(info[0], function(result) {\n          if (typeof info[1] === 'function') {\n            info[1](dateInfo, result);\n          }\n          dirtyDateString = dirtyDateString.substr(index + result.length);\n          return result;\n        });\n      }\n    }\n\n    return parseFlags[$0] ? '' : $0.slice(1, $0.length - 1);\n  });\n\n  if (!isValid) {\n    return toDate(dirtyFormatString);\n  }\n\n  const today = new Date();\n  if (dateInfo.isPm === true && dateInfo.hour != null && +dateInfo.hour !== 12) {\n    dateInfo.hour = +dateInfo.hour + 12;\n  } else if (dateInfo.isPm === false && +dateInfo.hour === 12) {\n    dateInfo.hour = 0;\n  }\n\n  let date;\n  if (dateInfo.timezoneOffset != null) {\n    dateInfo.minute = +(dateInfo.minute || 0) - +dateInfo.timezoneOffset;\n    date = new Date(\n      Date.UTC(\n        dateInfo.year || today.getFullYear(),\n        dateInfo.month || 0,\n        dateInfo.day || 1,\n        dateInfo.hour || 0,\n        dateInfo.minute || 0,\n        dateInfo.second || 0,\n        dateInfo.millisecond || 0,\n      ),\n    );\n  } else {\n    date = new Date(\n      dateInfo.year || today.getFullYear(),\n      dateInfo.month || 0,\n      dateInfo.day || 1,\n      dateInfo.hour || 0,\n      dateInfo.minute || 0,\n      dateInfo.second || 0,\n      dateInfo.millisecond || 0,\n    );\n  }\n  return date;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Calendar/utils.ts"],"sourceRoot":""}