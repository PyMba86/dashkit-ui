webpackJsonp([3],{"14i9":function(n,e,t){n.exports={code:"import { Select } from 'dashkit-ui';\nconst { Option } = Select;\nconst data = [\n  'red',\n  'orange',\n  'yellow',\n  'green',\n  'cyan',\n  'blue',\n  'violet',\n  'red1',\n  'orange1',\n  'yellow1',\n  'green1',\n  'cyan1',\n  'blue1',\n  'violet1',\n];\n\nfunction onChange(value) {\n  console.log(`value: ${value}`);\n}\n\nconst Demo = () => (\n  <div>\n    <Select onChange={onChange}>\n      {data.map(color => (\n        <Option key={color} value={color}>\n          {color}\n        </Option>\n      ))}\n      <Option value=\"disabled\" disabled>\n        disabled\n      </Option>\n    </Select>\n    <Select onChange={onChange} disabled style={{ marginLeft: 10 }}>\n      {data.map(color => (\n        <Option key={color} value={color}>\n          {color}\n        </Option>\n      ))}\n    </Select>\n  </div>\n);\n\nReactDOM.render(<Demo />, mountNode);\n",meta:{order:0,title:{"zh-CN":"基本","en-US":"Basic"},subtitle:{"zh-CN":"<p>基本用法。</p>\n","en-US":"<p>Select component to select value from options.</p>\n"}},preview:function(){function n(n){console.log("value: ".concat(n))}var e=t("GiK3"),o=(t("O27J"),t("qMEF")),a=o.Select.Option,i=["red","orange","yellow","green","cyan","blue","violet","red1","orange1","yellow1","green1","cyan1","blue1","violet1"],r=function(){return e.createElement("div",null,e.createElement(o.Select,{onChange:n},i.map(function(n){return e.createElement(a,{key:n,value:n},n)}),e.createElement(a,{value:"disabled",disabled:!0},"disabled")),e.createElement(o.Select,{onChange:n,disabled:!0,style:{marginLeft:10}},i.map(function(n){return e.createElement(a,{key:n,value:n},n)})))};return e.createElement(r,null)}}},"3DlC":function(n,e,t){n.exports={code:"import { Select } from 'dashkit-ui';\nconst { Option, OptionGroup } = Select;\nconst data = [\n  'red',\n  'orange',\n  'yellow',\n  'green',\n  'cyan',\n  'blue',\n  'violet',\n  'red1',\n  'orange1',\n  'yellow1',\n  'green1',\n  'cyan1',\n  'blue1',\n  'violet1',\n];\nconst stations = {\n  'Circle Line': ['Buona Vista', 'Kent Ridge', 'Bishan', 'Dhoby Ghaut'],\n  'East West Line': ['Chinese Garden', 'Jurong East'],\n};\n\nfunction onChange(value) {\n  console.log(`value: ${value}`);\n}\n\nfunction filterOption(inputValue, itemValue) {\n  return itemValue.toLowerCase().indexOf(inputValue.toLowerCase()) !== -1;\n}\nconst Demo = () => (\n  <div>\n    <Select onChange={onChange}>\n      {data.map(color => (\n        <Option key={color} value={color} filterOption={filterOption}>\n          {color}\n        </Option>\n      ))}\n      <Option value=\"disabled\" disabled filterOption={filterOption}>\n        disabled\n      </Option>\n    </Select>\n    <Select onChange={onChange} style={{ marginLeft: 10 }}>\n      {Object.keys(stations).map(key => (\n        <OptionGroup key={key} label={key}>\n          {stations[key].map(station => (\n            <Option key={station} value={station} filterOption={filterOption}>\n              {station}\n            </Option>\n          ))}\n        </OptionGroup>\n      ))}\n    </Select>\n  </div>\n);\nReactDOM.render(<Demo />, mountNode);\n",meta:{order:3,title:{"zh-CN":"选项","en-US":"FilterOption"},subtitle:{"zh-CN":"<p>处理选项用法。</p>\n","en-US":"<p>Use <code>filterOption</code> to flilter options.</p>\n"}},preview:function(){function n(n){console.log("value: ".concat(n))}function e(n,e){return-1!==e.toLowerCase().indexOf(n.toLowerCase())}var o=t("GiK3"),a=(t("O27J"),t("qMEF")),i=a.Select.Option,r=a.Select.OptionGroup,l=["red","orange","yellow","green","cyan","blue","violet","red1","orange1","yellow1","green1","cyan1","blue1","violet1"],c={"Circle Line":["Buona Vista","Kent Ridge","Bishan","Dhoby Ghaut"],"East West Line":["Chinese Garden","Jurong East"]},d=function(){return o.createElement("div",null,o.createElement(a.Select,{onChange:n},l.map(function(n){return o.createElement(i,{key:n,value:n,filterOption:e},n)}),o.createElement(i,{value:"disabled",disabled:!0,filterOption:e},"disabled")),o.createElement(a.Select,{onChange:n,style:{marginLeft:10}},Object.keys(c).map(function(n){return o.createElement(r,{key:n,label:n},c[n].map(function(n){return o.createElement(i,{key:n,value:n,filterOption:e},n)}))})))};return o.createElement(d,null)}}},"6Jr7":function(n,e,t){n.exports={code:"import { Select } from 'dashkit-ui';\nconst { Option, OptionGroup } = Select;\nconst stations = {\n  'Circle Line': ['Buona Vista', 'Kent Ridge', 'Bishan', 'Dhoby Ghaut'],\n  'East West Line': ['Chinese Garden', 'Jurong East'],\n};\n\nfunction onChange(value) {\n  console.log(`value: ${value}`);\n}\n\nfunction filterOption(inputValue, itemValue) {\n  return itemValue.toLowerCase().indexOf(inputValue.toLowerCase()) !== -1;\n}\n\nclass Demo extends React.Component {\n  state = {\n    activeStation: '',\n  };\n  render() {\n    const { activeStation } = this.state;\n    return (\n      <Select onChange={onChange} value={activeStation} onChange={this.handleChange}>\n        {Object.keys(stations).map(key => (\n          <OptionGroup key={key} label={key}>\n            {stations[key].map(station => (\n              <Option key={station} value={station} filterOption={filterOption}>\n                {station}\n              </Option>\n            ))}\n          </OptionGroup>\n        ))}\n      </Select>\n    );\n  }\n\n  handleChange = value => {\n    console.log(value);\n    this.setState({\n      activeStation: value,\n    });\n  };\n}\nReactDOM.render(<Demo />, mountNode);\n",meta:{order:4,title:{"zh-CN":"受控组件","en-US":"Controlled Component"},subtitle:{"zh-CN":"<p>受控组件</p>\n","en-US":"<p>Controlled Component.</p>\n"}},preview:function(){function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(e)}function e(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}function o(n,e){for(var t=0;t<e.length;t++){var o=e[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(n,o.key,o)}}function a(n,e,t){return e&&o(n.prototype,e),t&&o(n,t),n}function i(e,t){return!t||"object"!==n(t)&&"function"!=typeof t?l(e):t}function r(n){return(r=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function l(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}function c(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),e&&d(n,e)}function d(n,e){return(d=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n})(n,e)}function u(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function s(n){console.log("value: ".concat(n))}function p(n,e){return-1!==e.toLowerCase().indexOf(n.toLowerCase())}var h=t("GiK3"),f=(t("O27J"),t("qMEF")),m=f.Select.Option,y=f.Select.OptionGroup,g={"Circle Line":["Buona Vista","Kent Ridge","Bishan","Dhoby Ghaut"],"East West Line":["Chinese Garden","Jurong East"]},b=function(n){function t(){var n,o;e(this,t);for(var a=arguments.length,c=new Array(a),d=0;d<a;d++)c[d]=arguments[d];return o=i(this,(n=r(t)).call.apply(n,[this].concat(c))),u(l(o),"state",{activeStation:""}),u(l(o),"handleChange",function(n){console.log(n),o.setState({activeStation:n})}),o}return c(t,n),a(t,[{key:"render",value:function(){var n=this.state.activeStation;return h.createElement(f.Select,u({onChange:s,value:n},"onChange",this.handleChange),Object.keys(g).map(function(n){return h.createElement(y,{key:n,label:n},g[n].map(function(n){return h.createElement(m,{key:n,value:n,filterOption:p},n)}))}))}}]),t}(h.Component);return h.createElement(b,null)}}},LQa8:function(n,e,t){n.exports={markdown:'<h1>Select</h1>\n<p>Select component to select value from options.</p>\n<div id="demos"></div>\n<h2>API</h2>\n<h3>Select</h3>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>className of the component</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>size</td>\n<td>select size, can be set to <code>small</code> <code>large</code> or omitted</td>\n<td><code>string</code></td>\n<td>default</td>\n</tr>\n<tr>\n<td>name</td>\n<td>name of the component</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>disable the componnet</td>\n<td><code>boolean</code></td>\n<td>false</td>\n</tr>\n<tr>\n<td>value</td>\n<td>The select content value</td>\n<td><code>string</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>defaultValue</td>\n<td>The initial select content</td>\n<td><code>string</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>placeholder</td>\n<td>The placeholder of select</td>\n<td><code>string</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>multiple</td>\n<td>set multiple</td>\n<td>boolean</td>\n<td>-</td>\n</tr>\n<tr>\n<td>prefix</td>\n<td>The prefix icon for the Input.</td>\n<td><code>icon type</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>prefixClassName</td>\n<td>The className of prefix icon</td>\n<td><code>string</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>Called when select an option or input value change</td>\n<td><code>(options: string[]) =&gt; void;</code></td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>Select.Option</h3>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>className of the component</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>value</td>\n<td>className of the option</td>\n<td><code>number | string</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>disable the option</td>\n<td><code>boolean</code></td>\n<td>false</td>\n</tr>\n<tr>\n<td>filterOption</td>\n<td>deteimin whether to show the option</td>\n<td><code>boolean | ((inputValue: string, option?: any) =&gt; void)</code></td>\n<td>true</td>\n</tr>\n</tbody>\n</table>\n<h3>Select.OptionGroup</h3>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>className of the component</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>value</td>\n<td>className of the option</td>\n<td><code>number | string</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>label</td>\n<td>name of the group</td>\n<td><code>string</code></td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n',demos:{basic:t("14i9"),controlled:t("6Jr7"),filterOption:t("3DlC"),group:t("WcGd"),prefix:t("peU5")}}},WcGd:function(n,e,t){n.exports={code:"import { Select } from 'dashkit-ui';\nconst { Option, OptionGroup } = Select;\nconst data = {\n  'Circle Line': ['Buona Vista', 'Kent Ridge', 'Bishan', 'Dhoby Ghaut'],\n  'East West Line': ['Chinese Garden', 'Jurong East'],\n};\n\nfunction onChange(value) {\n  console.log(`value: ${value}`);\n}\n\nReactDOM.render(\n  <Select onChange={onChange}>\n    {Object.keys(data).map(key => (\n      <OptionGroup key={key} label={key}>\n        {data[key].map(station => (\n          <Option key={station} value={station}>\n            {station}\n          </Option>\n        ))}\n      </OptionGroup>\n    ))}\n  </Select>,\n  mountNode,\n);\n",meta:{order:1,title:{"zh-CN":"组合","en-US":"Group"},subtitle:{"zh-CN":"<p>组合用法。</p>\n","en-US":"<p>Using <code>OptionGroup</code> to group the options.</p>\n"}},preview:function(){function n(n){console.log("value: ".concat(n))}var e=t("GiK3"),o=(t("O27J"),t("qMEF")),a=o.Select.Option,i=o.Select.OptionGroup,r={"Circle Line":["Buona Vista","Kent Ridge","Bishan","Dhoby Ghaut"],"East West Line":["Chinese Garden","Jurong East"]};return e.createElement(o.Select,{onChange:n},Object.keys(r).map(function(n){return e.createElement(i,{key:n,label:n},r[n].map(function(n){return e.createElement(a,{key:n,value:n},n)}))}))}}},peU5:function(n,e,t){n.exports={code:"import { Select } from 'dashkit-ui';\nconst { Option, OptionGroup } = Select;\nconst stations = {\n  'Circle Line': ['Buona Vista', 'Kent Ridge', 'Bishan', 'Dhoby Ghaut'],\n  'East West Line': ['Chinese Garden', 'Jurong East'],\n};\n\nfunction onChange(value) {\n  console.log(`value: ${value}`);\n}\nReactDOM.render(\n  <Select onChange={onChange} prefix=\"map-pin\">\n    {Object.keys(stations).map(key => (\n      <OptionGroup key={key} label={key}>\n        {stations[key].map(station => (\n          <Option key={station} value={station}>\n            {station}\n          </Option>\n        ))}\n      </OptionGroup>\n    ))}\n  </Select>,\n  mountNode,\n);\n",meta:{order:2,title:{"zh-CN":"选项","en-US":"FilterOption"},subtitle:{"zh-CN":"<p>处理选项用法。</p>\n","en-US":"<p>Use <code>filterOption</code> to flilter options.</p>\n"}},preview:function(){function n(n){console.log("value: ".concat(n))}var e=t("GiK3"),o=(t("O27J"),t("qMEF")),a=o.Select.Option,i=o.Select.OptionGroup,r={"Circle Line":["Buona Vista","Kent Ridge","Bishan","Dhoby Ghaut"],"East West Line":["Chinese Garden","Jurong East"]};return e.createElement(o.Select,{onChange:n,prefix:"map-pin"},Object.keys(r).map(function(n){return e.createElement(i,{key:n,label:n},r[n].map(function(n){return e.createElement(a,{key:n,value:n},n)}))}))}}}});
//# sourceMappingURL=3.1b46018.js.map