{"version":3,"sources":["webpack:///js/85.eef8f50.js","webpack:///./docs/components/form/demo/modal.md"],"names":["webpackJsonp","rNxF","module","exports","markdown","demos"],"mappings":"AAAAA,cAAc,KAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SACAC,SAAA,2/FACAC","file":"js/85.eef8f50.js","sourcesContent":["webpackJsonp([85],{\n\n/***/ \"rNxF\":\n/***/ (function(module, exports) {\n\nmodule.exports = {\n markdown: \"<hr>\\n<h2>order: 4\\ntitle:\\nzh-CN: 和Modal一起使用\\nen-US: Use with Modal\\nsubtitle:\\nzh-CN: 和Modal一起使用\\nen-US: Use with Modal.</h2>\\n<pre><code class=\\\"language-js\\\">import { Form, Input, Button, Modal } from 'dashkit-ui';\\n\\nclass App extends React.Component {\\n  state = {\\n    visible: false,\\n  };\\n  render() {\\n    return (\\n      &lt;div&gt;\\n        &lt;Button type=&quot;primary&quot; onClick={this.showModal}&gt;\\n          Open a Modal\\n        &lt;/Button&gt;\\n        &lt;Modal\\n          visible={this.state.visible}\\n          onClose={this.handleCancel}\\n          showFooter={false}\\n          title=&quot;Request an Invite&quot;\\n        &gt;\\n          &lt;Form onSubmit={this.handleSubmit} labelWidth={150}&gt;\\n            &lt;Form.Item\\n              label=&quot;Full Name&quot;\\n              name=&quot;name&quot;\\n              required\\n              rule={{\\n                message: 'Please input your name',\\n                trigger: [`blur`, `change`],\\n                validator: this.handleNameValidator,\\n              }}\\n            &gt;\\n              &lt;Input placeholder=&quot;Full name&quot; /&gt;\\n            &lt;/Form.Item&gt;\\n            &lt;Form.Item\\n              label=&quot;Email&quot;\\n              name=&quot;email&quot;\\n              required\\n              rule={{ message: 'Please input your email' }}\\n            &gt;\\n              &lt;Input placeholder=&quot;Email&quot; /&gt;\\n            &lt;/Form.Item&gt;\\n            &lt;Form.Item\\n              label=&quot;Confirm Email&quot;\\n              name=&quot;confirmEmail&quot;\\n              required\\n              rule={{\\n                message: 'Please input your email',\\n                trigger: [`focus`, `change`],\\n                validator: this.handleValidator,\\n              }}\\n            &gt;\\n              &lt;Input placeholder=&quot;Confirm email&quot; /&gt;\\n            &lt;/Form.Item&gt;\\n            &lt;Form.Item&gt;\\n              &lt;Button type=&quot;primary&quot; htmlType=&quot;submit&quot;&gt;\\n                Submit\\n              &lt;/Button&gt;\\n              &lt;Button style={{ marginLeft: 10 }} htmlType=&quot;reset&quot;&gt;\\n                Reset\\n              &lt;/Button&gt;\\n            &lt;/Form.Item&gt;\\n          &lt;/Form&gt;\\n        &lt;/Modal&gt;\\n      &lt;/div&gt;\\n    );\\n  }\\n\\n  handleSubmit = (event, values, error) =&gt; {\\n    event.preventDefault();\\n\\n    console.log(values, error);\\n  };\\n\\n  handleValidator = (forms, value, callback) =&gt; {\\n    if (value !== forms.email) {\\n      callback(&quot;Two inputs don't match!&quot;);\\n    }\\n  };\\n\\n  handleNameValidator = (forms, value, callback) =&gt; {\\n    console.log(forms.name);\\n    if (forms.name &amp;&amp; forms.name.length &lt; 3) {\\n      callback('Full name needs to be at least 3 characters long');\\n    }\\n  };\\n\\n  showModal = () =&gt; {\\n    this.setState({ visible: true });\\n  };\\n\\n  handleCancel = () =&gt; {\\n    this.setState({ visible: false });\\n  };\\n}\\n\\nReactDOM.render(&lt;App /&gt;, mountNode);\\n</code></pre>\\n\",\n demos: {\n\n},};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// js/85.eef8f50.js","module.exports = {\n markdown: \"<hr>\\n<h2>order: 4\\ntitle:\\nzh-CN: 和Modal一起使用\\nen-US: Use with Modal\\nsubtitle:\\nzh-CN: 和Modal一起使用\\nen-US: Use with Modal.</h2>\\n<pre><code class=\\\"language-js\\\">import { Form, Input, Button, Modal } from 'dashkit-ui';\\n\\nclass App extends React.Component {\\n  state = {\\n    visible: false,\\n  };\\n  render() {\\n    return (\\n      &lt;div&gt;\\n        &lt;Button type=&quot;primary&quot; onClick={this.showModal}&gt;\\n          Open a Modal\\n        &lt;/Button&gt;\\n        &lt;Modal\\n          visible={this.state.visible}\\n          onClose={this.handleCancel}\\n          showFooter={false}\\n          title=&quot;Request an Invite&quot;\\n        &gt;\\n          &lt;Form onSubmit={this.handleSubmit} labelWidth={150}&gt;\\n            &lt;Form.Item\\n              label=&quot;Full Name&quot;\\n              name=&quot;name&quot;\\n              required\\n              rule={{\\n                message: 'Please input your name',\\n                trigger: [`blur`, `change`],\\n                validator: this.handleNameValidator,\\n              }}\\n            &gt;\\n              &lt;Input placeholder=&quot;Full name&quot; /&gt;\\n            &lt;/Form.Item&gt;\\n            &lt;Form.Item\\n              label=&quot;Email&quot;\\n              name=&quot;email&quot;\\n              required\\n              rule={{ message: 'Please input your email' }}\\n            &gt;\\n              &lt;Input placeholder=&quot;Email&quot; /&gt;\\n            &lt;/Form.Item&gt;\\n            &lt;Form.Item\\n              label=&quot;Confirm Email&quot;\\n              name=&quot;confirmEmail&quot;\\n              required\\n              rule={{\\n                message: 'Please input your email',\\n                trigger: [`focus`, `change`],\\n                validator: this.handleValidator,\\n              }}\\n            &gt;\\n              &lt;Input placeholder=&quot;Confirm email&quot; /&gt;\\n            &lt;/Form.Item&gt;\\n            &lt;Form.Item&gt;\\n              &lt;Button type=&quot;primary&quot; htmlType=&quot;submit&quot;&gt;\\n                Submit\\n              &lt;/Button&gt;\\n              &lt;Button style={{ marginLeft: 10 }} htmlType=&quot;reset&quot;&gt;\\n                Reset\\n              &lt;/Button&gt;\\n            &lt;/Form.Item&gt;\\n          &lt;/Form&gt;\\n        &lt;/Modal&gt;\\n      &lt;/div&gt;\\n    );\\n  }\\n\\n  handleSubmit = (event, values, error) =&gt; {\\n    event.preventDefault();\\n\\n    console.log(values, error);\\n  };\\n\\n  handleValidator = (forms, value, callback) =&gt; {\\n    if (value !== forms.email) {\\n      callback(&quot;Two inputs don't match!&quot;);\\n    }\\n  };\\n\\n  handleNameValidator = (forms, value, callback) =&gt; {\\n    console.log(forms.name);\\n    if (forms.name &amp;&amp; forms.name.length &lt; 3) {\\n      callback('Full name needs to be at least 3 characters long');\\n    }\\n  };\\n\\n  showModal = () =&gt; {\\n    this.setState({ visible: true });\\n  };\\n\\n  handleCancel = () =&gt; {\\n    this.setState({ visible: false });\\n  };\\n}\\n\\nReactDOM.render(&lt;App /&gt;, mountNode);\\n</code></pre>\\n\",\n demos: {\n\n},};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/components/form/demo/modal.md\n// module id = rNxF\n// module chunks = 85"],"sourceRoot":""}