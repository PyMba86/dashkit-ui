webpackJsonp([14],{TIce:function(n,e,t){n.exports={code:"import { Modal, Button } from 'dashkit-ui';\n\nfunction confirm() {\n  Modal.confirm({\n    title: 'This is a confirm message',\n    content: (\n      <div>\n        <p>some messages...some messages...</p>\n        <p>some messages...some messages...</p>\n      </div>\n    ),\n    onConfirm() {\n      console.log('call onConfirm callback');\n    },\n    onCancel() {\n      console.log('call onCancel callback');\n    },\n  });\n}\n\nReactDOM.render(<Button onClick={confirm}>Confirm</Button>, mountNode);\n",meta:{order:2,title:{"zh-CN":"确认","en-US":"Confirm"},subtitle:{"zh-CN":"<p>基本用法，使用<code>type</code>来控制是否打开dialog。</p>\n","en-US":"<p>In the various types of information modal dialog, only one button to close dialog is provided.</p>\n"}},preview:function(){function n(){o.Modal.confirm({title:"This is a confirm message",content:e.createElement("div",null,e.createElement("p",null,"some messages...some messages..."),e.createElement("p",null,"some messages...some messages...")),onConfirm:function(){console.log("call onConfirm callback")},onCancel:function(){console.log("call onCancel callback")}})}var e=t("GiK3"),o=(t("O27J"),t("qMEF"));return e.createElement(o.Button,{onClick:n},"Confirm")}}},VkPd:function(n,e,t){n.exports={code:"import { Modal, Button } from 'dashkit-ui';\n\nfunction success() {\n  Modal.success({\n    title: 'This is a success message',\n    content: (\n      <div>\n        <p>some messages...some messages...</p>\n        <p>some messages...some messages...</p>\n      </div>\n    ),\n    onConfirm() {\n      console.log('call onConfirm callback');\n    },\n  });\n}\n\nfunction info() {\n  Modal.info({\n    title: 'This is a notification message',\n    content: 'some messages...some messages...',\n  });\n}\n\nfunction error() {\n  Modal.error({\n    title: 'This is a error message',\n    content: 'some messages...some messages...',\n  });\n}\n\nfunction warning() {\n  Modal.warning({\n    title: 'This is a warning message',\n    content: 'some messages...some messages...',\n  });\n}\n\nReactDOM.render(\n  <div className=\"modal-btn\">\n    <Button onClick={success}>Success</Button>\n    <Button onClick={info}>Info</Button>\n    <Button onClick={error}>Error</Button>\n    <Button onClick={warning}>Warning</Button>\n  </div>,\n  mountNode,\n);\n",meta:{order:1,title:{"zh-CN":"类型","en-US":"Type"},subtitle:{"zh-CN":"<p>基本用法，使用<code>type</code>来控制是否打开dialog。</p>\n","en-US":"<p>In the various types of information modal dialog, only one button to close dialog is provided.</p>\n"}},preview:function(){function n(){l.Modal.success({title:"This is a success message",content:i.createElement("div",null,i.createElement("p",null,"some messages...some messages..."),i.createElement("p",null,"some messages...some messages...")),onConfirm:function(){console.log("call onConfirm callback")}})}function e(){l.Modal.info({title:"This is a notification message",content:"some messages...some messages..."})}function o(){l.Modal.error({title:"This is a error message",content:"some messages...some messages..."})}function s(){l.Modal.warning({title:"This is a warning message",content:"some messages...some messages..."})}var i=t("GiK3"),l=(t("O27J"),t("qMEF"));return i.createElement("div",{className:"modal-btn"},i.createElement(l.Button,{onClick:n},"Success"),i.createElement(l.Button,{onClick:e},"Info"),i.createElement(l.Button,{onClick:o},"Error"),i.createElement(l.Button,{onClick:s},"Warning"))}}},c0CY:function(n,e,t){n.exports={markdown:'<h1>Modal</h1>\n<p>Informs users while preserving the current page state.</p>\n<div id="demos"></div>\n<h2>API</h2>\n<div class="api-container">\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>className of the component</td>\n<td><code>string</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>disable the button</td>\n<td><code>boolean</code></td>\n<td>false</td>\n</tr>\n<tr>\n<td>okText</td>\n<td>text of OK button</td>\n<td><code>string</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>cancelText</td>\n<td>text of cancel button</td>\n<td><code>string</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>onConfirm</td>\n<td>callback when clicked confirm button</td>\n<td><code>Function</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>onCancel</td>\n<td>callback when clicked cancel button</td>\n<td><code>Function</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>footer</td>\n<td>footer component</td>\n<td><code>React.React.Node</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>showFooter</td>\n<td>determine whether to show the footer component</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>closeByEsc</td>\n<td>cancel the modal when click <code>esc</code> keyborad</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>visible</td>\n<td>determine the modal is active</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>width</td>\n<td>the <code>width</code> style of the modal</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3>Modal.method()</h3>\n<ul>\n<li>Modal.info</li>\n<li>Modal.success</li>\n<li>Modal.error</li>\n<li>Modal.warning</li>\n<li>Modal.warn</li>\n<li>Modal.confirm</li>\n</ul>\n',demos:{basic:t("i4zn"),confirm:t("TIce"),type:t("VkPd")}}},i4zn:function(n,e,t){n.exports={code:"import { Modal, Button } from 'dashkit-ui';\n\nclass App extends React.Component {\n  state = {\n    visible: false,\n  };\n\n  render() {\n    return (\n      <div>\n        <Button onClick={this.handleClick}>Click</Button>\n        <Modal\n          visible={this.state.visible}\n          title=\"Modal Title\"\n          onClose={this.handleClose}\n          onCancel={this.handleClose}\n          onConfirm={this.handleClose}\n        >\n          <p>Contents...</p>\n          <p>Contents...</p>\n          <p>Contents...</p>\n        </Modal>\n      </div>\n    );\n  }\n\n  handleClick = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  handleClose = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n}\n\nReactDOM.render(<App />, mountNode);\n",meta:{order:0,title:{"zh-CN":"基本","en-US":"Basic"},subtitle:{"zh-CN":"<p>基本用法，使用<code>visible</code>来控制是否打开dialog。</p>\n","en-US":"<p>Use <code>visible</code> to define Modal's style.</p>\n"}},preview:function(){function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(e)}function e(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}function o(n,e){for(var t=0;t<e.length;t++){var o=e[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(n,o.key,o)}}function s(n,e,t){return e&&o(n.prototype,e),t&&o(n,t),n}function i(e,t){return!t||"object"!==n(t)&&"function"!=typeof t?c(e):t}function l(n){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function c(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}function a(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),e&&r(n,e)}function r(n,e){return(r=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n})(n,e)}function d(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}var m=t("GiK3"),u=(t("O27J"),t("qMEF")),f=function(n){function t(){var n,o;e(this,t);for(var s=arguments.length,a=new Array(s),r=0;r<s;r++)a[r]=arguments[r];return o=i(this,(n=l(t)).call.apply(n,[this].concat(a))),d(c(o),"state",{visible:!1}),d(c(o),"handleClick",function(){o.setState({visible:!0})}),d(c(o),"handleClose",function(){o.setState({visible:!1})}),o}return a(t,n),s(t,[{key:"render",value:function(){return m.createElement("div",null,m.createElement(u.Button,{onClick:this.handleClick},"Click"),m.createElement(u.Modal,{visible:this.state.visible,title:"Modal Title",onClose:this.handleClose,onCancel:this.handleClose,onConfirm:this.handleClose},m.createElement("p",null,"Contents..."),m.createElement("p",null,"Contents..."),m.createElement("p",null,"Contents...")))}}]),t}(m.Component);return m.createElement(f,null)}}}});
//# sourceMappingURL=14.146d6e9.js.map