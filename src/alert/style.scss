@import '../style/functions';
@import '../style/theme';
@import '../style/mixins';

$prefix-cls: 'dk-alert';

.#{$prefix-cls} {
  position: relative;
  padding: $alert-padding-y $alert-padding-x;
  margin-bottom: $alert-margin-bottom;
  border: 1px solid transparent;
  border-radius: $alert-border-radius;
  transform-origin: 0 0;

  h3, h4, h5 {
    margin-top: 0.3em;
    color: inherit;
    font-size: 16px;
  }

  a {
    font-weight: $alert-link-font-weight;
  }

  &-enter {
    opacity: 0;
    transform: scaleY(0);
  }

  &-enter-active {
    background-color: #000;
    opacity: 1;
    transform: scaleY(1);
    transition: transform 0.216s, opacity 0.216s ease-in;
  }

  &-leave {
    opacity: 1;
    transform: scaleY(1);
  }

  &-leave-active {
    opacity: 0;
    transform: scaleY(0);
    transition: transform 0.216s, opacity 0.216s ease-out;
  }

  &-with-close {
    padding-right: $alert-padding-x + $alert-close-size;
  }

  &-close {
    position: absolute;
    top: $alert-padding-y;
    right: 12px;
    margin-top: 1px;
    font-size: $alert-close-size;
    color: $alert-close-color;
    transition: color .3s;
    cursor: pointer;

    &:hover {
      color: $alert-close-hover-color;
    }
  }

  &-with-icon {
    padding-left: $alert-padding-x + 22;
  }

  &-icon {
    position: absolute;
    width: 15px;
    height: 15px;
    margin-top: 2px;
    left: $alert-padding-x;
    top: $alert-padding-y;
    color: $primary;

    > svg {
      vertical-align: top;
    }
  }

  &-default {
    @include alert-variant($alert-default-bg, $alert-default-border, $alert-default-text);
  }

  // Alternate alerts
  @each $type, $color in $alert-type-colors {
    &-#{$type} {
      @include alert-variant(
        theme-color-level($color, $alert-bg-level), 
        theme-color-level($color, $alert-border-level),
        theme-color-level($color, $alert-color-level)
      );

      .#{$prefix-cls}-icon path {
        fill: theme-color-level($color, $alert-color-level);
      }
    }
  }
}