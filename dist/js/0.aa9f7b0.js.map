{"version":3,"sources":["webpack:///js/0.aa9f7b0.js","webpack:///./site/component/switch/style.scss?d1e0","webpack:///./site/component/switch/index.tsx","webpack:///./node_modules/marked/lib/marked.js","webpack:///./site/component/common/page.tsx","webpack:///./site/component/common/page.scss","webpack:///./docs/en-US/switch.md","webpack:///./site/component/common/example.scss","webpack:///./site/component/switch/style.scss","webpack:///./site/component/common/page.scss?ef97","webpack:///./site/component/common/example.scss?487f","webpack:///./site/component/common/example.tsx"],"names":["webpackJsonp","5qWR","module","exports","__webpack_require__","content","i","options","hmr","transform","insertInto","undefined","locals","8WKh","__webpack_exports__","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0__style_scss__","__WEBPACK_IMPORTED_MODULE_1_react__","n","__WEBPACK_IMPORTED_MODULE_2__common_page__","__extends","this","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","PageSwitch","_super","apply","arguments","render","markdownText","name","EFqf","global","root","Lexer","tokens","links","marked","defaults","rules","block","normal","pedantic","gfm","tables","InlineLexer","inline","renderer","Renderer","Error","breaks","TextRenderer","Parser","token","escape","html","encode","replace","unescape","_","toLowerCase","charAt","String","fromCharCode","parseInt","substring","edit","regex","opt","source","val","getRegex","RegExp","resolveUrl","base","href","baseUrls","test","rtrim","slice","noop","merge","obj","target","key","length","call","splitCells","tableRow","count","row","match","offset","str","escaped","curr","cells","split","splice","push","trim","c","invert","suffLen","currChar","substr","src","callback","toString","pending","highlight","lex","e","done","err","out","parse","type","text","lang","code","message","silent","newline","fences","hr","heading","nptable","blockquote","list","def","table","lheading","paragraph","_label","_title","bullet","item","_tag","_comment","top","next","loose","cap","bull","listStart","listItems","t","space","tag","l","isordered","istask","ischecked","exec","depth","header","align","ordered","start","indexOf","smartLists","join","task","checked","sanitize","pre","sanitizer","title","charCodeAt","autolink","url","link","reflink","nolink","strong","em","br","del","_escapes","_scheme","_email","_attribute","_href","_backpedal","output","prevCapZero","mangle","inLink","outputLink","escapes","codespan","smartypants","image","ch","Math","random","langPrefix","quote","level","raw","headerIds","headerPrefix","xhtml","body","listitem","checkbox","tablerow","tablecell","flags","prot","decodeURIComponent","baseUrl","originIndependentUrl","encodeURI","inlineText","reverse","tok","pop","peek","parseText","cell","j","setOptions","getDefaults","parser","lexer","inlineLexer","window","P4Xw","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_1_react_dom__","__WEBPACK_IMPORTED_MODULE_2_marked__","__WEBPACK_IMPORTED_MODULE_3__example__","__WEBPACK_IMPORTED_MODULE_4__page_scss__","__assign","assign","s","Page","props","_this","components","componentDidMount","contentElement","refs","HTMLElement","className","dangerouslySetInnerHTML","getMarkdownText","ref","_a","console","log","markdown","reg","replaceText","attributes","__html","TQ/R","dBnL","picked","example-21","meta","\\ntitle","component","fmEA","pCNe","rKR8","taEN","uLNp","__WEBPACK_IMPORTED_MODULE_0__example_scss__","__WEBPACK_IMPORTED_MODULE_2_react_dom__","__WEBPACK_IMPORTED_MODULE_3_marked__","__WEBPACK_IMPORTED_MODULE_4__src__","Example","getDataSource","sourceMatch","getDataMeta","metaData","metaMatch","forEach","line","ary","onControlClick","showCode","state","newValue","setState","setTimeout","Prism","highlightElement","dataMeta","dataSource","contentKey","babelConfig_1","presets","plugins","Promise","resolve","then","bind","Element","args","argv","Component","Function","concat","id","subtitle","onClick"],"mappings":"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","file":"js/0.aa9f7b0.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ \"5qWR\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\nvar content = __webpack_require__(\"pCNe\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(\"MTIv\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {\n\tmodule.hot.accept(\"!!../../../node_modules/happypack/loader.js?id=css!../../../node_modules/postcss-loader/lib/index.js!../../../node_modules/happypack/loader.js?id=sass!./style.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/happypack/loader.js?id=css!../../../node_modules/postcss-loader/lib/index.js!../../../node_modules/happypack/loader.js?id=sass!./style.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n\n/***/ \"8WKh\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__style_scss__ = __webpack_require__(\"5qWR\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__style_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__style_scss__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react__ = __webpack_require__(\"GiK3\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_page__ = __webpack_require__(\"P4Xw\");\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar PageSwitch = /** @class */ (function (_super) {\n    __extends(PageSwitch, _super);\n    function PageSwitch() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PageSwitch.prototype.render = function () {\n        var markdownText = __webpack_require__(\"dBnL\");\n        return (__WEBPACK_IMPORTED_MODULE_1_react__[\"createElement\"](__WEBPACK_IMPORTED_MODULE_2__common_page__[\"a\" /* default */], { markdownText: markdownText, name: \"switch\" }));\n    };\n    return PageSwitch;\n}(__WEBPACK_IMPORTED_MODULE_1_react__[\"PureComponent\"]));\n/* harmony default export */ __webpack_exports__[\"default\"] = (PageSwitch);\n\n\n/***/ }),\n\n/***/ \"EFqf\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n;(function(root) {\n'use strict';\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n  nptable: noop,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=\\\\h*\\\\n)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=\\\\h*\\\\n)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading| {0,3}>|<\\/?(?:tag)(?: +|\\n|\\/?>)|<(?:script|pre|style|!--))[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d+\\.)/;\nblock.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block.paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', block.heading)\n  .replace('lheading', block.lheading)\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\n? *\\1 *(?:\\n+|$)/,\n  paragraph: /^/,\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n});\n\nblock.gfm.paragraph = edit(block.paragraph)\n  .replace('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  .getRegex();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *([^|\\n ].*\\|.*)\\n *([-:]+ *\\|[-| :]*)(?:\\n((?:.*[^>\\n ].*(?:\\n|$))*)\\n*|$)/,\n  table: /^ *\\|(.+)\\n *\\|?( *[-:]+[-| :]*)(?:\\n((?: *[^>\\n ].*(?:\\n|$))*)\\n*|$)/\n});\n\n/**\n * Pedantic grammar\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = Object.create(null);\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.pedantic) {\n    this.rules = block.pedantic;\n  } else if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top) {\n  src = src.replace(/^ +$/gm, '');\n  var next,\n      loose,\n      cap,\n      bull,\n      b,\n      item,\n      listStart,\n      listItems,\n      t,\n      space,\n      i,\n      tag,\n      l,\n      isordered,\n      istask,\n      ischecked;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? rtrim(cap, '\\n')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (top && (cap = this.rules.nptable.exec(src))) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(item.cells[i], item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n      isordered = bull.length > 1;\n\n      listStart = {\n        type: 'list_start',\n        ordered: isordered,\n        start: isordered ? +bull : '',\n        loose: false\n      };\n\n      this.tokens.push(listStart);\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      listItems = [];\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (this.options.smartLists && i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        if (loose) {\n          listStart.loose = true;\n        }\n\n        // Check for task list items\n        istask = /^\\[[ xX]\\] /.test(item);\n        ischecked = undefined;\n        if (istask) {\n          ischecked = item[1] !== ' ';\n          item = item.replace(/^\\[[ xX]\\] +/, '');\n        }\n\n        t = {\n          type: 'list_item_start',\n          task: istask,\n          checked: ischecked,\n          loose: loose\n        };\n\n        listItems.push(t);\n        this.tokens.push(t);\n\n        // Recurse.\n        this.token(item, false);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      if (listStart.loose) {\n        l = listItems.length;\n        i = 0;\n        for (; i < l; i++) {\n          listItems[i].loose = true;\n        }\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if (top && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      if (!this.tokens.links[tag]) {\n        this.tokens.links[tag] = {\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n      continue;\n    }\n\n    // table (gfm)\n    if (top && (cap = this.rules.table.exec(src))) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(\n            item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''),\n            item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noop,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(href(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n  nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n  strong: /^__([^\\s])__(?!_)|^\\*\\*([^\\s])\\*\\*(?!\\*)|^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)/,\n  em: /^_([^\\s_])_(?!_)|^\\*([^\\s*\"<\\[])\\*(?!\\*)|^_([^\\s][\\s\\S]*?[^\\s_])_(?!_)|^_([^\\s_][\\s\\S]*?[^\\s])_(?!_)|^\\*([^\\s\"<\\[][\\s\\S]*?[^\\s*])\\*(?!\\*)|^\\*([^\\s*\"<\\[][\\s\\S]*?[^\\s])\\*(?!\\*)/,\n  code: /^(`+)\\s*([\\s\\S]*?[^`]?)\\s*\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noop,\n  text: /^[\\s\\S]+?(?=[\\\\<!\\[`*]|\\b_| {2,}\\n|$)/\n};\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', block._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]?|`[^`]*`|[^\\[\\]\\\\])*?/;\ninline._href = /\\s*(<(?:\\\\[<>]?|[^\\s<>\\\\])*>|(?:\\\\[()]?|\\([^\\s\\x00-\\x1f\\\\]*\\)|[^\\s\\x00-\\x1f()\\\\])*?)/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/)\n    .replace('email', inline._email)\n    .getRegex(),\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n  text: edit(inline.text)\n    .replace(']|', '~]|')\n    .replace('|', '|https?://|ftp://|www\\\\.|[a-zA-Z0-9.!#$%&\\'*+/=?^_`{\\\\|}~-]+@|')\n    .getRegex()\n});\n\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text).replace('{2,}', '*').getRegex()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer();\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  } else if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = '',\n      link,\n      text,\n      href,\n      title,\n      cap,\n      prevCapZero;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += cap[1];\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(this.mangle(cap[1]));\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      do {\n        prevCapZero = cap[0];\n        cap[0] = this.rules._backpedal.exec(cap[0])[0];\n      } while (prevCapZero !== cap[0]);\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0]\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      href = cap[2];\n      if (this.options.pedantic) {\n        link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        } else {\n          title = '';\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n      href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n      out += this.outputLink(cap, {\n        href: InlineLexer.escapes(href),\n        title: InlineLexer.escapes(title)\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2].trim(), true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.text(escape(this.smartypants(cap[0])));\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\nInlineLexer.escapes = function(text) {\n  return text ? text.replace(InlineLexer.rules._escapes, '$1') : text;\n}\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = link.href,\n      title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = '',\n      l = text.length,\n      i = 0,\n      ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || marked.defaults;\n}\n\nRenderer.prototype.code = function(code, lang, escaped) {\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw) {\n  if (this.options.headerIds) {\n    return '<h'\n      + level\n      + ' id=\"'\n      + this.options.headerPrefix\n      + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n      + '\">'\n      + text\n      + '</h'\n      + level\n      + '>\\n';\n  }\n  // ignore IDs\n  return '<h' + level + '>' + text + '</h' + level + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered, start) {\n  var type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n  return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.checkbox = function(checked) {\n  return '<input '\n    + (checked ? 'checked=\"\" ' : '')\n    + 'disabled=\"\" type=\"checkbox\"'\n    + (this.options.xhtml ? ' /' : '')\n    + '> ';\n}\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  if (body) body = '<tbody>' + body + '</tbody>';\n\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + body\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' align=\"' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  if (this.options.sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return text;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return text;\n    }\n  }\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n    href = resolveUrl(this.options.baseUrl, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return text;\n  }\n  var out = '<a href=\"' + escape(href) + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n    href = resolveUrl(this.options.baseUrl, href);\n  }\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\n\nfunction TextRenderer() {}\n\n// no need for block level renderers\n\nTextRenderer.prototype.strong =\nTextRenderer.prototype.em =\nTextRenderer.prototype.codespan =\nTextRenderer.prototype.del =\nTextRenderer.prototype.text = function (text) {\n  return text;\n}\n\nTextRenderer.prototype.link =\nTextRenderer.prototype.image = function(href, title, text) {\n  return '' + text;\n}\n\nTextRenderer.prototype.br = function() {\n  return '';\n}\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer();\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options) {\n  var parser = new Parser(options);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options);\n  // use an InlineLexer with a TextRenderer to extract pure text\n  this.inlineText = new InlineLexer(\n    src.links,\n    merge({}, this.options, {renderer: new TextRenderer()})\n  );\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        unescape(this.inlineText.output(this.token.text)));\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = '',\n          body = '',\n          i,\n          row,\n          cell,\n          j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      body = '';\n      var ordered = this.token.ordered,\n          start = this.token.start;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered, start);\n    }\n    case 'list_item_start': {\n      body = '';\n      var loose = this.token.loose;\n\n      if (this.token.task) {\n        body += this.renderer.checkbox(this.token.checked);\n      }\n\n      while (this.next().type !== 'list_item_end') {\n        body += !loose && this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'html': {\n      // TODO parse inline content if parameter markdown=1\n      return this.renderer.html(this.token.text);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n  }\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  return html\n    .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction edit(regex, opt) {\n  regex = regex.source || regex;\n  opt = opt || '';\n  return {\n    replace: function(name, val) {\n      val = val.source || val;\n      val = val.replace(/(^|[^\\[])\\^/g, '$1');\n      regex = regex.replace(name, val);\n      return this;\n    },\n    getRegex: function() {\n      return new RegExp(regex, opt);\n    }\n  };\n}\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (/^[^:]+:\\/*[^/]*$/.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n\n  if (href.slice(0, 2) === '//') {\n    return base.replace(/:[\\s\\S]*/, ':') + href;\n  } else if (href.charAt(0) === '/') {\n    return base.replace(/(:\\/*[^/]*)[\\s\\S]*/, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\nvar baseUrls = {};\nvar originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1,\n      target,\n      key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n        var escaped = false,\n            curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n        if (escaped) {\n          // odd number of slashes means | is escaped\n          // so we leave it alone\n          return '|';\n        } else {\n          // add space before unescaped |\n          return ' |';\n        }\n      }),\n      cells = row.split(/ \\|/),\n      i = 0;\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n// /c*$/ is vulnerable to REDOS.\n// invert: Remove suffix of non-c chars instead. Default falsey.\nfunction rtrim(str, c, invert) {\n  if (str.length === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  var suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < str.length) {\n    var currChar = str.charAt(str.length - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.substr(0, str.length - suffLen);\n}\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight,\n        tokens,\n        pending,\n        i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt)\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.getDefaults = function () {\n  return {\n    baseUrl: null,\n    breaks: false,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: new Renderer(),\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    tables: true,\n    xhtml: false\n  };\n}\n\nmarked.defaults = marked.getDefaults();\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.parse = marked;\n\nif (true) {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  root.marked = marked;\n}\n})(this || (typeof window !== 'undefined' ? window : global));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"DuR2\")))\n\n/***/ }),\n\n/***/ \"P4Xw\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(\"GiK3\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_dom__ = __webpack_require__(\"O27J\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_dom___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_dom__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_marked__ = __webpack_require__(\"EFqf\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_marked___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_marked__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__example__ = __webpack_require__(\"uLNp\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__page_scss__ = __webpack_require__(\"rKR8\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__page_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__page_scss__);\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n\n\n\n\n\nvar Page = /** @class */ (function (_super) {\n    __extends(Page, _super);\n    function Page(props) {\n        var _this = _super.call(this, props) || this;\n        _this.components = [];\n        _this.renderer = new __WEBPACK_IMPORTED_MODULE_2_marked__[\"Renderer\"]();\n        return _this;\n    }\n    Page.prototype.componentDidMount = function () {\n        var contentElement = this.refs.content;\n        if (this.components.length && contentElement instanceof HTMLElement) {\n            __WEBPACK_IMPORTED_MODULE_1_react_dom__[\"render\"](this.components, contentElement);\n        }\n    };\n    Page.prototype.render = function () {\n        return (__WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"](\"div\", { className: \"app-page\" },\n            __WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"](\"div\", { className: \"app-page-info\", dangerouslySetInnerHTML: this.getMarkdownText() }),\n            __WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"](\"div\", { className: \"app-page-content\", ref: \"content\" })));\n    };\n    Page.prototype.getMarkdownText = function () {\n        var _this = this;\n        var _a = this.props, markdownText = _a.markdownText, name = _a.name;\n        var html = '';\n        console.log(markdownText);\n        if (typeof markdownText.markdown === 'string') {\n            this.components = [];\n            var reg = /:::\\s?example\\s?([^]+?):::/g;\n            var replaceText = markdownText.markdown.replace(reg, function (match, text, offset) {\n                var key = name + \"-\" + offset.toString(36);\n                var attributes = __assign({}, _this.props, { markdownText: text, key: key });\n                _this.components.push(__WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"](__WEBPACK_IMPORTED_MODULE_3__example__[\"a\" /* default */], attributes));\n                return '';\n            });\n            html = __WEBPACK_IMPORTED_MODULE_2_marked__(replaceText, { renderer: this.renderer });\n        }\n        return {\n            __html: html,\n        };\n    };\n    return Page;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"PureComponent\"]));\n/* harmony default export */ __webpack_exports__[\"a\"] = (Page);\n\n\n/***/ }),\n\n/***/ \"TQ/R\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(false);\n// imports\n\n\n// module\nexports.push([module.i, \".app-page {\\n  width: 100%;\\n  padding: 24px; }\\n  .app-page p {\\n    color: #95aac9;\\n    margin-top: 6px; }\\n\\n.app-page-info {\\n  width: 100%; }\\n\", \"\"]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"dBnL\":\n/***/ (function(module, exports) {\n\nmodule.exports = {\n  markdown: \"# Switch\\n\\nReplaces a standard checkbox input with a switch button.\\n\\n<div id=example-21></div>\",\n  picked: {\"example-21\":{\"code\":\"\\\\n// import { Switch } from 'dashkit-ui';\\\\n\\\\nfunction onChange(checked) {\\\\n  console.log(`switch to ${checked}`);\\\\n}\\\\n\\\\nReactDOM.render(\\\\n  <Switch defaultChecked onChange={onChange} />,\\\\n  mountNode\\\\n);\\\\n\",\"meta\":{\"\\\\ntitle\":\"Basic\\\\nsubtitle\"},\"component\":\"function() {   var React = require('react');  return React.createElement('pre', {    style: {\\\"padding\\\":10,\\\"background\\\":\\\"rgb(204, 0, 0)\\\",\\\"color\\\":\\\"white\\\",\\\"fontFamily\\\":\\\"sans-serif\\\",\\\"fontSize\\\":\\\"16px\\\",\\\"fontWeight\\\":\\\"bold\\\",\\\"overflow\\\":\\\"auto\\\"}  }, 'SyntaxError: unknown: Expecting Unicode escape sequence \\\\uXXXX (1:1)'); }\"}},};\n\n/***/ }),\n\n/***/ \"fmEA\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(false);\n// imports\n\n\n// module\nexports.push([module.i, \".example {\\n  width: 100%;\\n  border: 1px solid #edf2f9;\\n  background-color: #fff;\\n  margin-top: 24px; }\\n  .example:nth-of-type(1) {\\n    margin-top: 0; }\\n  .example code[class*=\\\"language-\\\"],\\n  .example pre[class*=\\\"language-\\\"] {\\n    font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;\\n    text-align: left;\\n    white-space: pre;\\n    word-spacing: normal;\\n    word-break: normal;\\n    word-wrap: normal;\\n    line-height: 1.5;\\n    -moz-tab-size: 2;\\n      -o-tab-size: 2;\\n         tab-size: 2;\\n    -webkit-hyphens: none;\\n        -ms-hyphens: none;\\n            hyphens: none;\\n    color: #ccc; }\\n  .example pre[class*=\\\"language-\\\"] {\\n    padding: 16px 24px;\\n    margin-bottom: 0; }\\n  .example :not(pre) > code[class*=\\\"language-\\\"],\\n  .example pre[class*=\\\"language-\\\"] {\\n    background-color: #12263f; }\\n  .example :not(pre) > code[class*=\\\"language-\\\"] {\\n    padding: .1em;\\n    border-radius: .3em;\\n    white-space: normal; }\\n  .example .token.comment,\\n  .example .token.block-comment,\\n  .example .token.prolog,\\n  .example .token.doctype,\\n  .example .token.cdata {\\n    color: #999; }\\n  .example .token.punctuation {\\n    color: #ccc; }\\n  .example .token.tag,\\n  .example .token.attr-name,\\n  .example .token.namespace,\\n  .example .token.deleted {\\n    color: #e2777a; }\\n  .example .token.function-name {\\n    color: #6196cc; }\\n  .example .token.boolean,\\n  .example .token.number,\\n  .example .token.function {\\n    color: #f08d49; }\\n  .example .token.property,\\n  .example .token.class-name,\\n  .example .token.constant,\\n  .example .token.symbol {\\n    color: #569cd6; }\\n  .example .token.selector,\\n  .example .token.important,\\n  .example .token.atrule,\\n  .example .token.keyword,\\n  .example .token.builtin {\\n    color: #cc99cd; }\\n  .example .token.string,\\n  .example .token.char,\\n  .example .token.attr-value,\\n  .example .token.regex,\\n  .example .token.variable {\\n    color: #7ec699; }\\n  .example .token.operator,\\n  .example .token.entity,\\n  .example .token.url {\\n    color: #67cdcc; }\\n  .example .token.important,\\n  .example .token.bold {\\n    font-weight: bold; }\\n  .example .token.italic {\\n    font-style: italic; }\\n  .example .token.entity {\\n    cursor: help; }\\n  .example .token.inserted {\\n    color: green; }\\n\\n.example-content {\\n  padding: 42px 24px 50px; }\\n\\n.example-info {\\n  position: relative;\\n  padding: 16px 24px;\\n  border-top: 1px solid #edf2f9; }\\n\\n.example-title {\\n  position: absolute;\\n  top: -15px;\\n  left: 16px;\\n  height: 30px;\\n  padding: 0 8px;\\n  line-height: 30px;\\n  font-size: 18px;\\n  font-weight: 500;\\n  background-color: #fff; }\\n\\n.example-subtitle {\\n  color: #95aac9; }\\n  .example-subtitle > p {\\n    margin: 0;\\n    padding: 0; }\\n  .example-subtitle code {\\n    margin: 0 1px;\\n    background-color: #f2f4f5;\\n    padding: .2em .4em;\\n    border-radius: 3px;\\n    font-size: .9em;\\n    border: 1px solid #eee; }\\n\\n.example-control {\\n  position: absolute;\\n  right: 16px;\\n  bottom: 16px;\\n  color: #95aac9;\\n  font-size: 18px;\\n  cursor: pointer; }\\n  .example-control:hover {\\n    color: #888; }\\n\", \"\"]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"pCNe\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(false);\n// imports\n\n\n// module\nexports.push([module.i, \"\", \"\"]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"rKR8\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\nvar content = __webpack_require__(\"TQ/R\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(\"MTIv\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {\n\tmodule.hot.accept(\"!!../../../node_modules/happypack/loader.js?id=css!../../../node_modules/postcss-loader/lib/index.js!../../../node_modules/happypack/loader.js?id=sass!./page.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/happypack/loader.js?id=css!../../../node_modules/postcss-loader/lib/index.js!../../../node_modules/happypack/loader.js?id=sass!./page.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n\n/***/ \"taEN\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\nvar content = __webpack_require__(\"fmEA\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(\"MTIv\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {\n\tmodule.hot.accept(\"!!../../../node_modules/happypack/loader.js?id=css!../../../node_modules/postcss-loader/lib/index.js!../../../node_modules/happypack/loader.js?id=sass!./example.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/happypack/loader.js?id=css!../../../node_modules/postcss-loader/lib/index.js!../../../node_modules/happypack/loader.js?id=sass!./example.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n\n/***/ \"uLNp\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__example_scss__ = __webpack_require__(\"taEN\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__example_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__example_scss__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react__ = __webpack_require__(\"GiK3\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_dom__ = __webpack_require__(\"O27J\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_dom___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_react_dom__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_marked__ = __webpack_require__(\"EFqf\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_marked___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_marked__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__src__ = __webpack_require__(\"qMEF\");\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n// import { transform } from 'babel-standalone'; \n\nvar Example = /** @class */ (function (_super) {\n    __extends(Example, _super);\n    function Example(props) {\n        var _this = _super.call(this, props) || this;\n        _this.getDataSource = function () {\n            var markdownText = _this.props.markdownText;\n            if (markdownText) {\n                var reg = /```(.*)js\\s?([^]+?)```/;\n                var sourceMatch = markdownText.match(reg);\n                if (sourceMatch && sourceMatch.length && sourceMatch[2]) {\n                    return sourceMatch[2];\n                }\n            }\n            return '';\n        };\n        _this.getDataMeta = function () {\n            var markdownText = _this.props.markdownText;\n            var metaData = {};\n            if (markdownText) {\n                var reg = /```(.*)meta\\s?([^]+?)```/;\n                var metaMatch = markdownText.match(reg);\n                if (metaMatch && metaMatch.length && metaMatch[2]) {\n                    var originData = metaMatch[2];\n                    var lines = originData.trim().split('\\n');\n                    lines.forEach(function (line) {\n                        var ary = line.trim().split(':');\n                        if (ary && ary.length > 1) {\n                            metaData[ary[0]] = ary[1].trim();\n                        }\n                    });\n                }\n            }\n            return metaData;\n        };\n        _this.onControlClick = function () {\n            var showCode = _this.state.showCode;\n            var newValue = !showCode;\n            _this.setState({\n                showCode: newValue,\n            });\n            setTimeout(function () {\n                if (newValue && _this.refs.code) {\n                    window.Prism.highlightElement(_this.refs.code);\n                }\n            }, 0);\n        };\n        _this.dataMeta = _this.getDataMeta();\n        _this.dataSource = _this.getDataSource();\n        _this.contentKey = \"\" + (Math.random() * 1e9).toString(36);\n        _this.state = {\n            showCode: false,\n        };\n        return _this;\n    }\n    Example.prototype.componentDidMount = function () {\n        var _this = this;\n        if (this.dataSource) {\n            var babelConfig_1 = {\n                presets: ['es2015', 'react', 'stage-0'],\n                plugins: [\n                    [\n                        \"transform-decorators-legacy\"\n                    ]\n                ]\n            };\n            new Promise(function(resolve) { resolve(); }).then(__webpack_require__.bind(null, \"qMEF\")).then(function (Element) {\n                var args = ['context', 'React', 'ReactDOM'];\n                var argv = [_this, __WEBPACK_IMPORTED_MODULE_1_react__, __WEBPACK_IMPORTED_MODULE_2_react_dom__];\n                for (var key in Element) {\n                    args.push(key);\n                    argv.push(Element[key]);\n                }\n                return {\n                    args: args,\n                    argv: argv,\n                };\n            }).then(function (_a) {\n                var args = _a.args, argv = _a.argv;\n                var code = \"\\n          \" + _this.dataSource\n                    .replace('dashkit-ui', '../../../src')\n                    .replace('mountNode', \"document.getElementById('\" + _this.contentKey + \"')\") + \"\\n        \";\n                var Component = transform(code, babelConfig_1).code;\n                args.push(Component);\n                new (Function.bind.apply(Function, [void 0].concat(args)))().apply(_this, argv);\n            });\n        }\n    };\n    Example.prototype.render = function () {\n        var _a = this, dataMeta = _a.dataMeta, dataSource = _a.dataSource;\n        var showCode = this.state.showCode;\n        return (__WEBPACK_IMPORTED_MODULE_1_react__[\"createElement\"](\"div\", { className: \"example\" },\n            __WEBPACK_IMPORTED_MODULE_1_react__[\"createElement\"](\"div\", { className: \"example-content\", id: this.contentKey }),\n            __WEBPACK_IMPORTED_MODULE_1_react__[\"createElement\"](\"div\", { className: \"example-info\" },\n                dataMeta.title ? __WEBPACK_IMPORTED_MODULE_1_react__[\"createElement\"](\"div\", { className: \"example-title\" }, dataMeta.title) : null,\n                dataMeta.subtitle\n                    ? __WEBPACK_IMPORTED_MODULE_1_react__[\"createElement\"](\"div\", { className: \"example-subtitle\", dangerouslySetInnerHTML: {\n                            __html: __WEBPACK_IMPORTED_MODULE_3_marked__(dataMeta.subtitle),\n                        } })\n                    : null,\n                __WEBPACK_IMPORTED_MODULE_1_react__[\"createElement\"](__WEBPACK_IMPORTED_MODULE_4__src__[\"Icon\"], { type: showCode ? 'folder-minus' : 'folder-plus', className: \"example-control\", onClick: this.onControlClick })),\n            showCode\n                ? __WEBPACK_IMPORTED_MODULE_1_react__[\"createElement\"](\"pre\", { className: \"example-code\" },\n                    __WEBPACK_IMPORTED_MODULE_1_react__[\"createElement\"](\"code\", { className: \"language-jsx\", ref: \"code\" }, dataSource))\n                : null));\n    };\n    return Example;\n}(__WEBPACK_IMPORTED_MODULE_1_react__[\"PureComponent\"]));\n/* harmony default export */ __webpack_exports__[\"a\"] = (Example);\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// js/0.aa9f7b0.js","\nvar content = require(\"!!../../../node_modules/happypack/loader.js?id=css!../../../node_modules/postcss-loader/lib/index.js!../../../node_modules/happypack/loader.js?id=sass!./style.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/happypack/loader.js?id=css!../../../node_modules/postcss-loader/lib/index.js!../../../node_modules/happypack/loader.js?id=sass!./style.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/happypack/loader.js?id=css!../../../node_modules/postcss-loader/lib/index.js!../../../node_modules/happypack/loader.js?id=sass!./style.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./site/component/switch/style.scss\n// module id = 5qWR\n// module chunks = 0","import './style.scss';\n\nimport * as React from 'react';\nimport Page from '../common/page';\n\nclass PageSwitch extends React.PureComponent {\n  render() {\n    const markdownText = require(`../../../docs/en-US/switch.md`);\n    return (\n      <Page markdownText={markdownText} name=\"switch\" />\n    );\n  }\n}\nexport default PageSwitch;\n\n\n// WEBPACK FOOTER //\n// ./site/component/switch/index.tsx","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n;(function(root) {\n'use strict';\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n  nptable: noop,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=\\\\h*\\\\n)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=\\\\h*\\\\n)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading| {0,3}>|<\\/?(?:tag)(?: +|\\n|\\/?>)|<(?:script|pre|style|!--))[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d+\\.)/;\nblock.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block.paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', block.heading)\n  .replace('lheading', block.lheading)\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\n? *\\1 *(?:\\n+|$)/,\n  paragraph: /^/,\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n});\n\nblock.gfm.paragraph = edit(block.paragraph)\n  .replace('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  .getRegex();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *([^|\\n ].*\\|.*)\\n *([-:]+ *\\|[-| :]*)(?:\\n((?:.*[^>\\n ].*(?:\\n|$))*)\\n*|$)/,\n  table: /^ *\\|(.+)\\n *\\|?( *[-:]+[-| :]*)(?:\\n((?: *[^>\\n ].*(?:\\n|$))*)\\n*|$)/\n});\n\n/**\n * Pedantic grammar\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = Object.create(null);\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.pedantic) {\n    this.rules = block.pedantic;\n  } else if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top) {\n  src = src.replace(/^ +$/gm, '');\n  var next,\n      loose,\n      cap,\n      bull,\n      b,\n      item,\n      listStart,\n      listItems,\n      t,\n      space,\n      i,\n      tag,\n      l,\n      isordered,\n      istask,\n      ischecked;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? rtrim(cap, '\\n')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (top && (cap = this.rules.nptable.exec(src))) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(item.cells[i], item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n      isordered = bull.length > 1;\n\n      listStart = {\n        type: 'list_start',\n        ordered: isordered,\n        start: isordered ? +bull : '',\n        loose: false\n      };\n\n      this.tokens.push(listStart);\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      listItems = [];\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (this.options.smartLists && i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        if (loose) {\n          listStart.loose = true;\n        }\n\n        // Check for task list items\n        istask = /^\\[[ xX]\\] /.test(item);\n        ischecked = undefined;\n        if (istask) {\n          ischecked = item[1] !== ' ';\n          item = item.replace(/^\\[[ xX]\\] +/, '');\n        }\n\n        t = {\n          type: 'list_item_start',\n          task: istask,\n          checked: ischecked,\n          loose: loose\n        };\n\n        listItems.push(t);\n        this.tokens.push(t);\n\n        // Recurse.\n        this.token(item, false);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      if (listStart.loose) {\n        l = listItems.length;\n        i = 0;\n        for (; i < l; i++) {\n          listItems[i].loose = true;\n        }\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if (top && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      if (!this.tokens.links[tag]) {\n        this.tokens.links[tag] = {\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n      continue;\n    }\n\n    // table (gfm)\n    if (top && (cap = this.rules.table.exec(src))) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(\n            item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''),\n            item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noop,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(href(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n  nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n  strong: /^__([^\\s])__(?!_)|^\\*\\*([^\\s])\\*\\*(?!\\*)|^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)/,\n  em: /^_([^\\s_])_(?!_)|^\\*([^\\s*\"<\\[])\\*(?!\\*)|^_([^\\s][\\s\\S]*?[^\\s_])_(?!_)|^_([^\\s_][\\s\\S]*?[^\\s])_(?!_)|^\\*([^\\s\"<\\[][\\s\\S]*?[^\\s*])\\*(?!\\*)|^\\*([^\\s*\"<\\[][\\s\\S]*?[^\\s])\\*(?!\\*)/,\n  code: /^(`+)\\s*([\\s\\S]*?[^`]?)\\s*\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noop,\n  text: /^[\\s\\S]+?(?=[\\\\<!\\[`*]|\\b_| {2,}\\n|$)/\n};\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', block._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]?|`[^`]*`|[^\\[\\]\\\\])*?/;\ninline._href = /\\s*(<(?:\\\\[<>]?|[^\\s<>\\\\])*>|(?:\\\\[()]?|\\([^\\s\\x00-\\x1f\\\\]*\\)|[^\\s\\x00-\\x1f()\\\\])*?)/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/)\n    .replace('email', inline._email)\n    .getRegex(),\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n  text: edit(inline.text)\n    .replace(']|', '~]|')\n    .replace('|', '|https?://|ftp://|www\\\\.|[a-zA-Z0-9.!#$%&\\'*+/=?^_`{\\\\|}~-]+@|')\n    .getRegex()\n});\n\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text).replace('{2,}', '*').getRegex()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer();\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  } else if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = '',\n      link,\n      text,\n      href,\n      title,\n      cap,\n      prevCapZero;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += cap[1];\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(this.mangle(cap[1]));\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      do {\n        prevCapZero = cap[0];\n        cap[0] = this.rules._backpedal.exec(cap[0])[0];\n      } while (prevCapZero !== cap[0]);\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0]\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      href = cap[2];\n      if (this.options.pedantic) {\n        link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        } else {\n          title = '';\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n      href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n      out += this.outputLink(cap, {\n        href: InlineLexer.escapes(href),\n        title: InlineLexer.escapes(title)\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2].trim(), true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.text(escape(this.smartypants(cap[0])));\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\nInlineLexer.escapes = function(text) {\n  return text ? text.replace(InlineLexer.rules._escapes, '$1') : text;\n}\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = link.href,\n      title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = '',\n      l = text.length,\n      i = 0,\n      ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || marked.defaults;\n}\n\nRenderer.prototype.code = function(code, lang, escaped) {\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw) {\n  if (this.options.headerIds) {\n    return '<h'\n      + level\n      + ' id=\"'\n      + this.options.headerPrefix\n      + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n      + '\">'\n      + text\n      + '</h'\n      + level\n      + '>\\n';\n  }\n  // ignore IDs\n  return '<h' + level + '>' + text + '</h' + level + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered, start) {\n  var type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n  return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.checkbox = function(checked) {\n  return '<input '\n    + (checked ? 'checked=\"\" ' : '')\n    + 'disabled=\"\" type=\"checkbox\"'\n    + (this.options.xhtml ? ' /' : '')\n    + '> ';\n}\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  if (body) body = '<tbody>' + body + '</tbody>';\n\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + body\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' align=\"' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  if (this.options.sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return text;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return text;\n    }\n  }\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n    href = resolveUrl(this.options.baseUrl, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return text;\n  }\n  var out = '<a href=\"' + escape(href) + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n    href = resolveUrl(this.options.baseUrl, href);\n  }\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\n\nfunction TextRenderer() {}\n\n// no need for block level renderers\n\nTextRenderer.prototype.strong =\nTextRenderer.prototype.em =\nTextRenderer.prototype.codespan =\nTextRenderer.prototype.del =\nTextRenderer.prototype.text = function (text) {\n  return text;\n}\n\nTextRenderer.prototype.link =\nTextRenderer.prototype.image = function(href, title, text) {\n  return '' + text;\n}\n\nTextRenderer.prototype.br = function() {\n  return '';\n}\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer();\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options) {\n  var parser = new Parser(options);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options);\n  // use an InlineLexer with a TextRenderer to extract pure text\n  this.inlineText = new InlineLexer(\n    src.links,\n    merge({}, this.options, {renderer: new TextRenderer()})\n  );\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        unescape(this.inlineText.output(this.token.text)));\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = '',\n          body = '',\n          i,\n          row,\n          cell,\n          j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      body = '';\n      var ordered = this.token.ordered,\n          start = this.token.start;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered, start);\n    }\n    case 'list_item_start': {\n      body = '';\n      var loose = this.token.loose;\n\n      if (this.token.task) {\n        body += this.renderer.checkbox(this.token.checked);\n      }\n\n      while (this.next().type !== 'list_item_end') {\n        body += !loose && this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'html': {\n      // TODO parse inline content if parameter markdown=1\n      return this.renderer.html(this.token.text);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n  }\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  return html\n    .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction edit(regex, opt) {\n  regex = regex.source || regex;\n  opt = opt || '';\n  return {\n    replace: function(name, val) {\n      val = val.source || val;\n      val = val.replace(/(^|[^\\[])\\^/g, '$1');\n      regex = regex.replace(name, val);\n      return this;\n    },\n    getRegex: function() {\n      return new RegExp(regex, opt);\n    }\n  };\n}\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (/^[^:]+:\\/*[^/]*$/.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n\n  if (href.slice(0, 2) === '//') {\n    return base.replace(/:[\\s\\S]*/, ':') + href;\n  } else if (href.charAt(0) === '/') {\n    return base.replace(/(:\\/*[^/]*)[\\s\\S]*/, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\nvar baseUrls = {};\nvar originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1,\n      target,\n      key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n        var escaped = false,\n            curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n        if (escaped) {\n          // odd number of slashes means | is escaped\n          // so we leave it alone\n          return '|';\n        } else {\n          // add space before unescaped |\n          return ' |';\n        }\n      }),\n      cells = row.split(/ \\|/),\n      i = 0;\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n// /c*$/ is vulnerable to REDOS.\n// invert: Remove suffix of non-c chars instead. Default falsey.\nfunction rtrim(str, c, invert) {\n  if (str.length === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  var suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < str.length) {\n    var currChar = str.charAt(str.length - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.substr(0, str.length - suffLen);\n}\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight,\n        tokens,\n        pending,\n        i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt)\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.getDefaults = function () {\n  return {\n    baseUrl: null,\n    breaks: false,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: new Renderer(),\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    tables: true,\n    xhtml: false\n  };\n}\n\nmarked.defaults = marked.getDefaults();\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.parse = marked;\n\nif (typeof module !== 'undefined' && typeof exports === 'object') {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  root.marked = marked;\n}\n})(this || (typeof window !== 'undefined' ? window : global));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/marked/lib/marked.js\n// module id = EFqf\n// module chunks = 0","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport * as marked from 'marked';\nimport Example from './example';\nimport './page.scss';\n\ntype Props = {\n  markdownText?: string;\n  name?: string;\n  pageData?: any;\n};\n\nclass Page extends React.PureComponent<Props> {\n  private renderer: any;\n  private components: any;\n  constructor(props: Props) {\n    super(props);\n    this.components = [];\n    this.renderer = new marked.Renderer();\n  }\n  public componentDidMount() {\n    const contentElement = this.refs.content;\n    if (this.components.length && contentElement instanceof HTMLElement) {\n      ReactDOM.render(this.components, contentElement);\n    }\n  }\n  public render() {\n    return (\n      <div className=\"app-page\">\n        <div className=\"app-page-info\" dangerouslySetInnerHTML={this.getMarkdownText()} />\n        <div className=\"app-page-content\" ref=\"content\" />\n      </div>\n    )\n  }\n  private getMarkdownText() {\n    const { markdownText, name } = this.props;\n    let html = '';\n    console.log(markdownText);\n    if (typeof markdownText.markdown === 'string') {\n      this.components = [];\n      const reg = /:::\\s?example\\s?([^]+?):::/g;\n      const replaceText = markdownText.markdown.replace(reg, (match, text, offset) => {\n        const key = `${name}-${offset.toString(36)}`;\n        const attributes = {\n          ...this.props,\n          markdownText: text,\n          key: key,\n        }\n        this.components.push(\n          React.createElement(Example, attributes)\n        );\n        return '';\n      });\n\n      html = marked(replaceText, { renderer: this.renderer });\n    }\n    return {\n      __html: html,\n    }\n  }\n}\n\nexport default Page;\n\n\n// WEBPACK FOOTER //\n// ./site/component/common/page.tsx","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".app-page {\\n  width: 100%;\\n  padding: 24px; }\\n  .app-page p {\\n    color: #95aac9;\\n    margin-top: 6px; }\\n\\n.app-page-info {\\n  width: 100%; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/happypack/loader.js?id=css!./node_modules/postcss-loader/lib!./node_modules/happypack/loader.js?id=sass!./site/component/common/page.scss\n// module id = TQ/R\n// module chunks = 0","module.exports = {\n  markdown: \"# Switch\\n\\nReplaces a standard checkbox input with a switch button.\\n\\n<div id=example-21></div>\",\n  picked: {\"example-21\":{\"code\":\"\\\\n// import { Switch } from 'dashkit-ui';\\\\n\\\\nfunction onChange(checked) {\\\\n  console.log(`switch to ${checked}`);\\\\n}\\\\n\\\\nReactDOM.render(\\\\n  <Switch defaultChecked onChange={onChange} />,\\\\n  mountNode\\\\n);\\\\n\",\"meta\":{\"\\\\ntitle\":\"Basic\\\\nsubtitle\"},\"component\":\"function() {   var React = require('react');  return React.createElement('pre', {    style: {\\\"padding\\\":10,\\\"background\\\":\\\"rgb(204, 0, 0)\\\",\\\"color\\\":\\\"white\\\",\\\"fontFamily\\\":\\\"sans-serif\\\",\\\"fontSize\\\":\\\"16px\\\",\\\"fontWeight\\\":\\\"bold\\\",\\\"overflow\\\":\\\"auto\\\"}  }, 'SyntaxError: unknown: Expecting Unicode escape sequence \\\\uXXXX (1:1)'); }\"}},};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/en-US/switch.md\n// module id = dBnL\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".example {\\n  width: 100%;\\n  border: 1px solid #edf2f9;\\n  background-color: #fff;\\n  margin-top: 24px; }\\n  .example:nth-of-type(1) {\\n    margin-top: 0; }\\n  .example code[class*=\\\"language-\\\"],\\n  .example pre[class*=\\\"language-\\\"] {\\n    font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;\\n    text-align: left;\\n    white-space: pre;\\n    word-spacing: normal;\\n    word-break: normal;\\n    word-wrap: normal;\\n    line-height: 1.5;\\n    -moz-tab-size: 2;\\n      -o-tab-size: 2;\\n         tab-size: 2;\\n    -webkit-hyphens: none;\\n        -ms-hyphens: none;\\n            hyphens: none;\\n    color: #ccc; }\\n  .example pre[class*=\\\"language-\\\"] {\\n    padding: 16px 24px;\\n    margin-bottom: 0; }\\n  .example :not(pre) > code[class*=\\\"language-\\\"],\\n  .example pre[class*=\\\"language-\\\"] {\\n    background-color: #12263f; }\\n  .example :not(pre) > code[class*=\\\"language-\\\"] {\\n    padding: .1em;\\n    border-radius: .3em;\\n    white-space: normal; }\\n  .example .token.comment,\\n  .example .token.block-comment,\\n  .example .token.prolog,\\n  .example .token.doctype,\\n  .example .token.cdata {\\n    color: #999; }\\n  .example .token.punctuation {\\n    color: #ccc; }\\n  .example .token.tag,\\n  .example .token.attr-name,\\n  .example .token.namespace,\\n  .example .token.deleted {\\n    color: #e2777a; }\\n  .example .token.function-name {\\n    color: #6196cc; }\\n  .example .token.boolean,\\n  .example .token.number,\\n  .example .token.function {\\n    color: #f08d49; }\\n  .example .token.property,\\n  .example .token.class-name,\\n  .example .token.constant,\\n  .example .token.symbol {\\n    color: #569cd6; }\\n  .example .token.selector,\\n  .example .token.important,\\n  .example .token.atrule,\\n  .example .token.keyword,\\n  .example .token.builtin {\\n    color: #cc99cd; }\\n  .example .token.string,\\n  .example .token.char,\\n  .example .token.attr-value,\\n  .example .token.regex,\\n  .example .token.variable {\\n    color: #7ec699; }\\n  .example .token.operator,\\n  .example .token.entity,\\n  .example .token.url {\\n    color: #67cdcc; }\\n  .example .token.important,\\n  .example .token.bold {\\n    font-weight: bold; }\\n  .example .token.italic {\\n    font-style: italic; }\\n  .example .token.entity {\\n    cursor: help; }\\n  .example .token.inserted {\\n    color: green; }\\n\\n.example-content {\\n  padding: 42px 24px 50px; }\\n\\n.example-info {\\n  position: relative;\\n  padding: 16px 24px;\\n  border-top: 1px solid #edf2f9; }\\n\\n.example-title {\\n  position: absolute;\\n  top: -15px;\\n  left: 16px;\\n  height: 30px;\\n  padding: 0 8px;\\n  line-height: 30px;\\n  font-size: 18px;\\n  font-weight: 500;\\n  background-color: #fff; }\\n\\n.example-subtitle {\\n  color: #95aac9; }\\n  .example-subtitle > p {\\n    margin: 0;\\n    padding: 0; }\\n  .example-subtitle code {\\n    margin: 0 1px;\\n    background-color: #f2f4f5;\\n    padding: .2em .4em;\\n    border-radius: 3px;\\n    font-size: .9em;\\n    border: 1px solid #eee; }\\n\\n.example-control {\\n  position: absolute;\\n  right: 16px;\\n  bottom: 16px;\\n  color: #95aac9;\\n  font-size: 18px;\\n  cursor: pointer; }\\n  .example-control:hover {\\n    color: #888; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/happypack/loader.js?id=css!./node_modules/postcss-loader/lib!./node_modules/happypack/loader.js?id=sass!./site/component/common/example.scss\n// module id = fmEA\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/happypack/loader.js?id=css!./node_modules/postcss-loader/lib!./node_modules/happypack/loader.js?id=sass!./site/component/switch/style.scss\n// module id = pCNe\n// module chunks = 0","\nvar content = require(\"!!../../../node_modules/happypack/loader.js?id=css!../../../node_modules/postcss-loader/lib/index.js!../../../node_modules/happypack/loader.js?id=sass!./page.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/happypack/loader.js?id=css!../../../node_modules/postcss-loader/lib/index.js!../../../node_modules/happypack/loader.js?id=sass!./page.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/happypack/loader.js?id=css!../../../node_modules/postcss-loader/lib/index.js!../../../node_modules/happypack/loader.js?id=sass!./page.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./site/component/common/page.scss\n// module id = rKR8\n// module chunks = 0","\nvar content = require(\"!!../../../node_modules/happypack/loader.js?id=css!../../../node_modules/postcss-loader/lib/index.js!../../../node_modules/happypack/loader.js?id=sass!./example.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/happypack/loader.js?id=css!../../../node_modules/postcss-loader/lib/index.js!../../../node_modules/happypack/loader.js?id=sass!./example.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/happypack/loader.js?id=css!../../../node_modules/postcss-loader/lib/index.js!../../../node_modules/happypack/loader.js?id=sass!./example.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./site/component/common/example.scss\n// module id = taEN\n// module chunks = 0","import './example.scss';\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport * as marked from 'marked';\nimport * as classNames from 'classnames';\n// import { transform } from 'babel-standalone'; \nimport { Icon } from '../../../src';\n\ntype ExampleProps = {\n  markdownText: string;\n};\n\ntype ExampleState = {\n  showCode: boolean;\n};\n\n\nclass Example extends React.PureComponent<ExampleProps, ExampleState> {\n  private dataMeta: any;\n  private dataSource: any;\n  private contentKey: any;\n  constructor(props: ExampleProps) {\n    super(props);\n    this.dataMeta = this.getDataMeta();\n    this.dataSource = this.getDataSource();\n    this.contentKey = `${(Math.random() * 1e9).toString(36)}`;\n    this.state = {\n      showCode: false,\n    };\n  }\n\n  public componentDidMount() {\n    if (this.dataSource) {\n      const babelConfig = {\n        presets: ['es2015', 'react', 'stage-0'],\n        plugins: [\n          [\n            \"transform-decorators-legacy\"\n          ]\n        ]\n      };\n      import('../../../src').then((Element: any) => {\n        const args = ['context', 'React', 'ReactDOM'];\n        const argv = [this, React, ReactDOM];\n\n        for (const key in Element) {\n          args.push(key);\n          argv.push(Element[key]);\n        }\n\n        return {\n          args,\n          argv,\n        }\n      }).then(({ args, argv }) => {\n        const code = `\n          ${this.dataSource\n            .replace('dashkit-ui', '../../../src')\n            .replace('mountNode', `document.getElementById(\\'${this.contentKey}\\')`)}\n        `;\n        const Component = transform(code, babelConfig).code;\n        args.push(Component);\n        new Function(...args).apply(this, argv);\n      })\n      \n    }\n  }\n  public render() {\n    const { dataMeta, dataSource } = this;\n    const { showCode } = this.state;\n   \n\n    return (\n      <div className=\"example\">\n        <div className=\"example-content\" id={this.contentKey}></div>\n        <div className=\"example-info\">\n          {dataMeta.title ? <div className=\"example-title\">{dataMeta.title}</div> : null}\n          {dataMeta.subtitle \n            ? <div className=\"example-subtitle\" dangerouslySetInnerHTML={{\n                __html: marked(dataMeta.subtitle),\n              }} /> \n            : null\n          }\n          <Icon \n            type={showCode ? 'folder-minus' : 'folder-plus'} \n            className=\"example-control\" \n            onClick={this.onControlClick}\n          />\n        </div>\n        {showCode\n          ? <pre className=\"example-code\">\n            <code className=\"language-jsx\" ref=\"code\">{dataSource}</code>\n          </pre>\n          : null\n        }\n      </div>\n    )\n  }\n\n  private getDataSource = () => {\n    const { markdownText } = this.props;\n    if (markdownText) {\n      const reg = /```(.*)js\\s?([^]+?)```/;\n      const sourceMatch = markdownText.match(reg);\n      if (sourceMatch && sourceMatch.length && sourceMatch[2]) {\n        return sourceMatch[2];\n      }\n    }\n    return '';\n  }\n\n  private getDataMeta = () => {\n    const { markdownText } = this.props;\n    const metaData: any = {};\n    if (markdownText) {\n      const reg = /```(.*)meta\\s?([^]+?)```/;\n      const metaMatch = markdownText.match(reg);\n      if (metaMatch && metaMatch.length && metaMatch[2]) {\n        const originData = metaMatch[2];\n        const lines = originData.trim().split('\\n');\n\n        lines.forEach((line: any) => {\n          const ary = line.trim().split(':');\n          if (ary && ary.length > 1) {\n            metaData[ary[0]] = ary[1].trim();\n          }\n        });\n      }\n    }\n    return metaData;\n  }\n\n  private onControlClick = () => {\n    const { showCode } = this.state;\n    const newValue = !showCode\n    this.setState({\n      showCode: newValue,\n    });\n    setTimeout(() => {\n      if (newValue && this.refs.code) {\n        (window as any).Prism.highlightElement(this.refs.code);\n      }\n    }, 0);\n  }\n}\n\nexport default Example;\n\n\n// WEBPACK FOOTER //\n// ./site/component/common/example.tsx"],"sourceRoot":""}